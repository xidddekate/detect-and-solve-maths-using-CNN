{"version":3,"sources":["webpack:///./src/app/mathpractice/components/practice-default/practice-default.component.html","webpack:///./src/app/mathpractice/components/practice-default/practice-default.component.scss","webpack:///./src/app/mathpractice/components/practice-default/practice-default.component.ts","webpack:///./src/app/mathpractice/mathpractice.module.ts","webpack:///./src/app/mathpractice/services/practice.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8oBAA8oB,eAAe,4mBAA4mB,eAAe,ohCAAohC,mBAAmB,YAAY,2BAA2B,gOAAgO,eAAe,YAAY,2BAA2B,8RAA8R,YAAY,kdAAkd,wBAAwB,8HAA8H,wBAAwB,+KAA+K,yBAAyB,y/DAAy/D,qBAAqB,uFAAuF,qBAAqB,4KAA4K,2BAA2B,06E;;;;;;;;;;;ACA/iM,kCAAkC,8BAA8B,EAAE,gBAAgB,sBAAsB,EAAE,aAAa,iBAAiB,EAAE,+CAA+C,2zB;;;;;;;;;;;;;;;;;;;;;;;;;ACA1G;AACX;AACW;AACP;AACsB;AACF;AAExC;AACgC;AAEpB;AAMhE;IAgCC,kCACS,EAAe,EACf,aAA4B,EAC5B,OAAuB,EACvB,eAAgC,EAChC,UAA6B,EAC7B,cAA8B;QAL9B,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAgB;QACvB,oBAAe,GAAf,eAAe,CAAiB;QAChC,eAAU,GAAV,UAAU,CAAmB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QArCvC,SAAI,GAAG,KAAK,CAAC;QAEb,eAAU,GAAG,GAAG,CAAC;QACjB,iBAAY,GAAG,GAAG,CAAC;QAEnB,gBAAW,GAAG,CAAC,CAAC;QAChB,oBAAe,GAAG;YACjB,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;YAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;YAChC,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;SAChC,CAAC;QACF,eAAU,GAAG;YACZ,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;YACpC,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;YAC1C,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;SACpC,CAAC;QACF,aAAQ,GAAG,CAAC,CAAC;QAIb,eAAU,GAAG,kFAAe,CAAC;QAC7B,kBAAa,GAAY,KAAK,CAAC;QAC/B,0CAA0C;QAC1C,uBAAkB,GAAW,EAAE,CAAC;QAChC,sBAAiB,GAAG,CAAC,CAAC;QACtB,kBAAa,GAAG,CAAC,CAAC;QAClB,UAAK,GAAW,CAAC,CAAC;QAClB,SAAI,GAAW,IAAI,CAAC,WAAW,CAAC;QAChC,mBAAc,GAAG,KAAK,CAAC;QAEvB,WAAM,GAAkB,EAAE,CAAC;QA+LX,UAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACxB,WAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAxLxC,CAAC;IAEJ,2CAAQ,GAAR;QACC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;IACd,CAAC;IACD,wCAAK,GAAL;QACC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAE1D,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAED,oDAAiB,GAAjB;QACC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YACrE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YAC5F,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;YAC5F,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChB;aAAM;YACN,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrD;IACF,CAAC;IAED,2CAAQ,GAAR;QACC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,cAAc,GAAG,IAAI,GAAG,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBAC5B,cAAc,EAAE,CAAC,GAAG,CAAC;gBACrB,QAAQ,EAAE,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBACvF,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,EAAE;gBACf,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU;aACrD,CAAC,CAAC;SACH;QACD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,qDAAkB,GAAlB;QACC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;SACrC;IACF,CAAC;IAED,mDAAgB,GAAhB;QACC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,eAAe,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YAC5C,UAAU,EAAE,CAAE,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACvC,CAAC,CAAC;IACJ,CAAC;IAED,qDAAkB,GAAlB;QACC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAClB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/D,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;QAC/D,mBAAmB;QACnB,IAAI,GAAG,GAAG,4CAA0C,GAAK,CAAC;QAC1D,IAAI,SAAS,GAAsB;YAClC,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,OAAO;SACjB,CAAC;QACF,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,uDAAoB,GAApB;QACC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACf,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEjG,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,GAAG,GAAG,oCAAkC,GAAK,CAAC;QAClD,IAAI,SAAS,GAAsB;YAClC,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,CAAC;SACX,CAAC;QACF,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,gEAA6B,GAA7B,cAAiC,CAAC;IAElC,4DAAyB,GAAzB,cAA6B,CAAC;IAE9B,0CAAO,GAAP;QACC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE;YACpC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC;YAC/B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;SAC9B;IACF,CAAC;IACD,uCAAI,GAAJ;QACC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC;YAC/B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;SAC9B;IACF,CAAC;IAED,+CAAY,GAAZ,UAAa,MAAM;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;YACxC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;YACtD,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YAEhF,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChE,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAEtD,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACvD,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;aACrD;iBAAM;gBACN,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;aACtD;YACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACxB;aAAM;YACN,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC/B,IAAI,EAAE;oBACL,OAAO,EAAE,gCAAgC;oBACzC,UAAU,EAAE,KAAK;iBACjB;gBACD,QAAQ,EAAE,CAAC;gBACX,UAAU,EAAE,CAAE,mBAAmB,CAAE;aACnC,CAAC,CAAC;SACH;IACF,CAAC;IAED,mDAAgB,GAAhB;QACC,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,EAAE;gBAClD,KAAK,IAAI,CAAC,CAAC;aACX;SACD;QACD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,6CAAU,GAAV;QAAA,iBAsBC;QArBA,IAAI,CAAC,aAAa;aAChB,sBAAsB,CAAC;YACvB,IAAI,EAAE,eAAe;YACrB,OAAO,EAAE,8BAA8B;YACvC,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;SACpB,CAAC;aACD,SAAS,CAAC,UAAC,GAAG;YACd,IAAI,GAAG,EAAE;gBACR,IAAI,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC;gBAC/B,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;oBAC9B,IAAI,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;wBACzC,KAAI,CAAC,aAAa,IAAI,CAAC,CAAC;qBACxB;iBACD;gBACD,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC3B;QACF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAc,GAAd,UAAe,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACrB,CAAC;IAQD,2CAAQ,GAAR,UAAS,KAAK;QACb,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;SACtC;aAAM;YACN,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SACxC;QACD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAC1C,CAAC;IAIM,kDAAe,GAAtB;QACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,EAAE,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,MAAM,CAAC;QAE7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAEO,gDAAa,GAArB,UAAsB,QAA2B;QAAjD,iBA2BC;QA1BA,sDAAS,CAAC,QAAQ,EAAE,WAAW,CAAC;aAC9B,IAAI,CACJ,gEAAS,CAAC,UAAC,CAAC;YACX,OAAO,sDAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,IAAI,CAC3C,gEAAS,CAAC,sDAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,EACzC,gEAAS,CAAC,sDAAS,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,EAC5C,+DAAQ,EAAE,CACV,CAAC;QACH,CAAC,CAAC,CACF;aACA,SAAS,CAAC,UAAC,GAA6B;YACxC,IAAM,IAAI,GAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;YAE9C,IAAM,OAAO,GAAG;gBACf,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;gBAC7B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG;aAC5B,CAAC;YAEF,IAAM,UAAU,GAAG;gBAClB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;gBAC7B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG;aAC5B,CAAC;YAEF,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACvC,oBAAoB;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,+CAAY,GAApB,UAAqB,OAAiC,EAAE,UAAoC;QAC3F,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACb,OAAO;SACP;QAED,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;QACpB,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE;YAClC,IAAI,CAAC,EAAE,CAAC,wBAAwB,GAAG,aAAa,CAAC;YACjD,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;YAC7C,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;SACjB;aAAM,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;YAC5C,IAAI,CAAC,EAAE,CAAC,wBAAwB,GAAG,aAAa,CAAC;YACjD,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,SAAS,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;YAC7C,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;SACjB;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,6CAAU,GAAV,UAAW,IAAI;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,8CAAW,GAAX;QACC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB;QACzF,mBAAmB;IACpB,CAAC;IACD,4CAAS,GAAT;QAAA,iBAqBC;QApBA,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAElC,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QACtE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAE,QAAQ,CAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU;aACb,aAAa,CAAC;YACd,MAAM,EAAE,UAAU;SAClB,CAAC;aACD,SAAS,CAAC,UAAC,GAAG;YACd,IAAI,KAAI,CAAC,aAAa,EAAE;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aACxD;YACD,iCAAiC;YACjC,0BAA0B;YAC1B,MAAM;YACN,gBAAgB;YAChB,sBAAsB;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IApHoB;QAApB,+DAAS,CAAC,QAAQ,CAAC;wEAAgB,wDAAU;4DAAC;IAEtC;QAAR,2DAAK,EAAE;;2DAAgC;IAC/B;QAAR,2DAAK,EAAE;;4DAAmC;IAG3C;QADC,kEAAY,CAAC,eAAe,EAAE,CAAE,QAAQ,CAAE,CAAC;;;;4DAQ3C;IAzOW,wBAAwB;QALpC,+DAAS,CAAC;YACV,QAAQ,EAAE,sBAAsB;YAChC,4JAAgD;;SAEhD,CAAC;+EAkCY,0DAAW;YACA,6EAAa;YACnB,oFAAc;YACN,0EAAe;YACpB,yFAAiB;YACb,oFAAc;OAtC3B,wBAAwB,CAiVpC;IAAD,+BAAC;CAAA;AAjVoC;;;;;;;;;;;;;;;;;;;;;;;;AChBoB;AACN;AACV;AACM;AACqD;AAC7C;AACA;AAGvD,IAAM,MAAM,GAAQ;IAClB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAC,gHAAwB;KACnC;CACF;AAWD;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAV9B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,gHAAwB,CAAC;YACxC,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAY;gBACZ,4DAAU;gBACV,kEAAY;aACb;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACzBoD;AAExC;AAQ3C;IAIC,yBAAoB,UAA4B;QAA5B,eAAU,GAAV,UAAU,CAAkB;QAH7C,cAAS,GAAG,mBAAO,CAAC,oDAAW,CAAC,CAAC;QACpC,YAAO,GAAG,mBAAO,CAAC,wDAAY,CAAC,CAAC;IAGhC,CAAC;IAED,iDAAuB,GAAvB,UAAwB,GAAG,EAAE,GAAG;QAC/B,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,KAAK,IAAI,CAAC,EAAE;YACf,OAAO,KAAK,GAAG,CAAC,CAAC;SACjB;aAAM;YACN,OAAO,KAAK,CAAC,CAAC,uDAAuD;SACrE;IACF,CAAC;IAED,6CAAmB,GAAnB,UAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC7B,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,EAAE;YACX,aAAa,IAAI,KAAK,CAAC;SACvB;aAAM,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;YACnB,aAAa,IAAI,MAAM,CAAC;SACxB;aAAM;YACN,aAAa,IAAO,CAAC,QAAK,CAAC;SAC3B;QACD,IAAI,CAAC,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,aAAa,IAAI,IAAI,CAAC;aACtB;iBAAM;gBACN,aAAa,IAAI,MAAI,CAAC,MAAG,CAAC;aAC1B;SACD;QACD,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;gBACf,aAAa,IAAI,IAAI,CAAC;aACtB;iBAAM;gBACF,aAAa,IAAO,CAAC,MAAG,CAAC;aAC7B;YACD,4BAA4B;SAC5B;QACD,IAAI,GAAG,GAAG,CAAC,EAAE;YACZ,aAAa,IAAI,MAAI,GAAK,CAAC;SAC3B;QACD,IAAI,GAAG,GAAG,CAAC,EAAE;YACZ,aAAa,IAAI,KAAG,GAAK,CAAC;SAC1B;QACD,aAAa,IAAI,IAAI,CAAC;QAEtB,OAAO,aAAa,CAAC;IACtB,CAAC;IAED,uCAAa,GAAb,UAAc,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,UAAC,EAAI,CAAC,IAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,OAAO,CAAC,CAAC;IACV,CAAC;IAED,gDAAsB,GAAtB,UAAuB,MAAM;QAC5B,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,MAAM,GAAC,EAAE,CAAC;QACd,IAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC;YACZ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC7B;QACD,IAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC;YACZ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;SAE7B;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAED,wCAAc,GAAd,UAAe,CAAC,EAAC,CAAC,EAAC,CAAC;QACnB,IAAI,GAAG,GAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QACtB,IAAG,CAAC,GAAC,CAAC,EAAC;YACN,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;SACT;QACD,IAAG,CAAC,GAAC,CAAC,EAAC;YACN,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;SACT;QACD,IAAG,CAAC,GAAC,CAAC,EAAC;YACN,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;SACT;QACD,IAAI,CAAC,GAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,GAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAGxC,OAAO,MAAM,CAAC,KAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAG,CAAC,CAAC;IACjD,CAAC;IACD,yCAAe,GAAf,UAAgB,GAAG;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IA7FW,eAAe;QAH3B,gEAAU,CAAC;YACX,UAAU,EAAE,MAAM;SAClB,CAAC;+EAK8B,yFAAiB;OAJpC,eAAe,CA+F3B;IAAD,sBAAC;CAAA;AA/F2B","file":"mathpractice-mathpractice-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"questionForm\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class='py-24'>\\r\\n    <div class='font-size-28 pb-24 primary-text-color '>Practice Math Problems</div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <div matTooltip=\\\"Select how many questions you want to practice\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" >\\r\\n          <mat-label>Number of Questions</mat-label>\\r\\n          <mat-select formControlName='questionNumbers'>\\r\\n            <mat-option *ngFor=\\\"let num of questionNumbers\\\" [value]=\\\"num.value\\\">\\r\\n              {{num.viewValue}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"questionForm.get('questionNumbers').touched && questionForm.get('questionNumbers').hasError('required')\\\">\\r\\n            How many questions do you want?</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div matTooltip=\\\"Select a difficulty\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Difficulty</mat-label>\\r\\n          <mat-select formControlName='difficulty'>\\r\\n            <mat-option *ngFor=\\\"let num of difficulty\\\" [value]=\\\"num.value\\\">\\r\\n              {{num.viewValue}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"questionForm.get('difficulty').touched && questionForm.get('difficulty').hasError('required')\\\">Choose\\r\\n            Difficulty</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button matTooltip=\\\"Generate random question to practice\\\" mat-raised-button color='primary' class='w-220 h-40'\\r\\n        (click)='generateQuestions()'>GENERATE\\r\\n        QUESTIONS</button>\\r\\n    </div>\\r\\n    <div *ngIf='IsQuizRunning' class='pt-16'>\\r\\n      <button (click)='finishQuiz()' matTooltip=\\\"Finish Quiz and see results\\\" mat-raised-button color='accent'\\r\\n        class='w-220 h-40'>FINISH QUIZ</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div *ngIf='IsQuizRunning' fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class='pb-16'>\\r\\n  <div class='p-12 border-radius-10-p font-size-20 custom-border' matTooltip=\\\"Turned in answers and total question count\\\" >Answered / Total : {{solvedAnswerCount}} /\\r\\n    {{GeneratedQuestions.length}}</div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf='isQuizFinished' fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class='pb-16'>\\r\\n  <div class='p-12 border-radius-10-p font-size-20 custom-border' matTooltip=\\\"Your score\\\">Score : {{correctAnswer}} /\\r\\n    {{GeneratedQuestions.length}}</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf='GeneratedQuestions' fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"24px\\\">\\r\\n    <div>\\r\\n      <div *ngFor='let content of GeneratedQuestions.slice(first, last);let i=index;  '>\\r\\n\\r\\n        <mat-card [class.mat-elevation-z10]=\\\"true\\\" class=\\\"font-size-12 w-470 mb-12\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"16px\\\">\\r\\n            <div class='font-size-16' matTooltip=\\\"Select question so that drawn solution on canvas can be set in solution\\\">\\r\\n              <button *ngIf='selected!=content.questionNumber' (click)='selectQuestion(content.questionNumber)'\\r\\n                mat-mini-fab>{{content.questionNumber}}</button>\\r\\n              <button *ngIf='selected==content.questionNumber' mat-mini-fab\\r\\n                color='primary'>{{content.questionNumber}}</button>\\r\\n\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxLayoutGap=\\\"8px\\\">\\r\\n              <div class='font-size-16'>  {{content.question.parsed}} </div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"54px\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <input matInput [formControl]=\\\"answer[first+i]\\\" type='text' class='font-size-16'>\\r\\n\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div *ngIf='!content.isAnswered && !isQuizFinished' class='pb-16'> <button\\r\\n                    (click)='turnInAnswer(content.questionNumber)' matTooltip=\\\"Turn in current answer\\\" mat-mini-fab\\r\\n                    color=\\\"primary\\\" class='font-size-12 accepted-color-background'><i class=\\\"material-icons\\\">\\r\\n                      get_app\\r\\n                    </i></button>\\r\\n                </div>\\r\\n                <div *ngIf='content.isAnswered && !isQuizFinished' class='pb-16'> <button matTooltip=\\\"Turned in\\\"\\r\\n                    mat-mini-fab color=\\\"accent\\\" class='font-size-12 '><i class=\\\"material-icons\\\">\\r\\n                      done_outline\\r\\n                    </i></button>\\r\\n                </div>\\r\\n                <div *ngIf='content.isCorrect && isQuizFinished' class='pb-16'> <button matTooltip=\\\"Turned in\\\"\\r\\n                    mat-mini-fab class='font-size-12 accepted-color-background'><i class=\\\"material-icons\\\">\\r\\n                      done_outline\\r\\n                    </i></button>\\r\\n                </div>\\r\\n                <div *ngIf='!content.isCorrect && isQuizFinished' class='pb-16'> <button matTooltip=\\\"Turned in\\\"\\r\\n                    mat-mini-fab class='font-size-12 rejected-color-background'><i class=\\\"material-icons\\\">\\r\\n                      highlight_off\\r\\n                    </i></button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf='isQuizFinished' class='font-size-16 '>\\r\\n                Given Answer: <span *ngIf='content.isCorrect ' class='accepted-color'>{{content.givenAnswer}} </span>\\r\\n                <span *ngIf='!content.isCorrect ' class='rejected-color'>{{content.givenAnswer}} </span>\\r\\n\\r\\n              </div>\\r\\n              <div *ngIf='isQuizFinished' class='font-size-16 '>\\r\\n                Correct Answers: <span class='accepted-color'>{{content.question.solution}} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Canvas -->\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"12px\\\" class='font-size-16'>\\r\\n        <div>Drawn answer will be parsed </div>\\r\\n        <div>in the selected question</div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n        <canvas #canvas id='myCanvas' class='mat-elevation-z8 dropzone '\\r\\n          [ngClass]=\\\"mode=='pen' ? 'crosshair' : 'rubber' \\\"></canvas>\\r\\n\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\" class='pb-16'>\\r\\n          <button  matTooltip=\\\"Eraser\\\" mat-mini-fab (click)='changeMode(\\\"eraser\\\")' class=' font-size-16 cornsilk-background'>\\r\\n\\r\\n            <i class=\\\"material-icons font-size-16 \\\">\\r\\n              crop_16_9\\r\\n            </i>\\r\\n\\r\\n          </button>\\r\\n          <button  matTooltip=\\\"Pencil\\\" mat-mini-fab color=\\\"primary\\\" (click)='changeMode(\\\"pen\\\")' class=' black-color-background font-size-16'>\\r\\n            <i class=\\\"material-icons font-size-16 \\\">\\r\\n              create\\r\\n            </i>\\r\\n\\r\\n\\r\\n\\r\\n          </button>\\r\\n          <button  matTooltip=\\\"Refresh canvas\\\" mat-mini-fab color=\\\"warn\\\" (click)='clearCanvas()' class='  font-size-16'>\\r\\n            <i class=\\\"material-icons font-size-16 \\\">\\r\\n              close\\r\\n            </i>\\r\\n\\r\\n          </button>\\r\\n          <button  matTooltip=\\\"Retry parsing image\\\" mat-mini-fab color='primary' (click)='saveImage()' class=' font-size-16 '>\\r\\n\\r\\n            <i class=\\\"material-icons font-size-16 \\\">\\r\\n              loop\\r\\n            </i>\\r\\n\\r\\n          </button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf='GeneratedQuestions.length>0' fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"48px\\\"\\r\\n    class='py-24'>\\r\\n    <button matTooltip=\\\"Go to previous page\\\" mat-fab (click)='Back()'><i class=\\\"material-icons\\\">\\r\\n        keyboard_arrow_left\\r\\n      </i></button>\\r\\n    <button matTooltip=\\\"Go to next page\\\" mat-fab (click)='Forward()'><i class=\\\"material-icons\\\">\\r\\n        keyboard_arrow_right\\r\\n      </i></button>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".custom-border {\\n  border: 4px solid #222858; }\\n\\n.crosshair {\\n  cursor: crosshair; }\\n\\n.rubber {\\n  cursor: cell; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0aHByYWN0aWNlL2NvbXBvbmVudHMvcHJhY3RpY2UtZGVmYXVsdC9DOlxcVXNlcnNcXFN1ZGhhbnNodVxcLnZzY29kZVxcUFJPSkVDVFNcXE1MXFxFRElURUQgZXF1YXRpb24gc29sdmVyIC0gQ29weVxcRnJvbnRlbmRcXGNyYWNrbXlrd2VyeS9zcmNcXGFwcFxcbWF0aHByYWN0aWNlXFxjb21wb25lbnRzXFxwcmFjdGljZS1kZWZhdWx0XFxwcmFjdGljZS1kZWZhdWx0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQXlCLEVBQUE7O0FBRTdCO0VBQ0ksaUJBQWlCLEVBQUE7O0FBRXJCO0VBQ0ksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWF0aHByYWN0aWNlL2NvbXBvbmVudHMvcHJhY3RpY2UtZGVmYXVsdC9wcmFjdGljZS1kZWZhdWx0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1ib3JkZXJ7XHJcbiAgICBib3JkZXI6IDRweCBzb2xpZCAjMjIyODU4O1xyXG59XHJcbi5jcm9zc2hhaXJ7XHJcbiAgICBjdXJzb3I6IGNyb3NzaGFpcjtcclxufVxyXG4ucnViYmVye1xyXG4gICAgY3Vyc29yOiBjZWxsO1xyXG4gICAgXHJcbn0iXX0= */\"","import { DifficultyLevel } from './../../../config/constants/defaultConstants';\r\nimport { PracticeService } from './../../services/practice.service';\r\nimport { UtilityService } from '../../../core/utility-service/utility.service';\r\nimport { SharedService } from '../../../shared/services/shared.service';\r\nimport { Component, OnInit, HostListener, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { EquationQuestion as QuestionInterface, quiz } from '../../../config/interfaces/mathplanet.interface';\r\nimport { generate, Subject, fromEvent } from 'rxjs';\r\nimport { MathsolverService } from '../../../mathsolver/services/mathsolver.service';\r\nimport { lookup } from 'dns';\r\nimport { switchMap, takeUntil, pairwise } from 'rxjs/operators';\r\n@Component({\r\n\tselector: 'app-practice-default',\r\n\ttemplateUrl: './practice-default.component.html',\r\n\tstyleUrls: [ './practice-default.component.scss' ]\r\n})\r\nexport class PracticeDefaultComponent implements OnInit {\r\n\tmode = 'pen';\r\n\tcanvasEl: HTMLCanvasElement;\r\n\twidthMinus = 300;\r\n\tcanvasHeight = 300;\r\n\tquestionForm: FormGroup;\r\n\tperPageShow = 4;\r\n\tquestionNumbers = [\r\n\t\t{ value: '12', viewValue: '12' },\r\n\t\t{ value: '24', viewValue: '24' },\r\n\t\t{ value: '32', viewValue: '32' }\r\n\t];\r\n\tdifficulty = [\r\n\t\t{ value: 'easy', viewValue: 'Easy' },\r\n\t\t{ value: 'average', viewValue: 'Average' },\r\n\t\t{ value: 'hard', viewValue: 'Hard' }\r\n\t];\r\n\tselected = 1;\r\n\tquestionNumber;\r\n\tminimumDifficulty;\r\n\tmaximumDifficulty;\r\n\tDifficulty = DifficultyLevel;\r\n\tIsQuizRunning: boolean = false;\r\n\t// IsQuizRunningSubject: Subject<boolean>;\r\n\tGeneratedQuestions: quiz[] = [];\r\n\tsolvedAnswerCount = 0;\r\n\tcorrectAnswer = 0;\r\n\tfirst: number = 0;\r\n\tlast: number = this.perPageShow;\r\n\tisQuizFinished = false;\r\n\tcroppedImageFile;\r\n\tanswer: FormControl[] = [];\r\n\tconstructor(\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate sharedService: SharedService,\r\n\t\tprivate utility: UtilityService,\r\n\t\tprivate practiceService: PracticeService,\r\n\t\tprivate mathsolver: MathsolverService,\r\n\t\tprivate utilityService: UtilityService\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.makeQuestionForm();\r\n\t\tthis.start();\r\n\t}\r\n\tstart() {\r\n\t\tthis.questionForm.get('difficulty').patchValue('easy');\r\n\t\tthis.questionForm.get('questionNumbers').patchValue('12');\r\n\r\n\t\tthis.questionNumber = 12;\r\n\t\tthis.minimumDifficulty = this.Difficulty['easy'].minimum;\r\n\t\tthis.maximumDifficulty = this.Difficulty['easy'].maximum;\r\n\t\tthis.generate();\r\n\t}\r\n\r\n\tgenerateQuestions() {\r\n\t\tif (!this.questionForm.invalid) {\r\n\t\t\tthis.questionNumber = this.questionForm.get('questionNumbers').value;\r\n\t\t\tthis.minimumDifficulty = this.Difficulty[this.questionForm.get('difficulty').value].minimum;\r\n\t\t\tthis.maximumDifficulty = this.Difficulty[this.questionForm.get('difficulty').value].maximum;\r\n\t\t\tthis.generate();\r\n\t\t} else {\r\n\t\t\tthis.utility.touchAllFieldsOfForm(this.questionForm);\r\n\t\t}\r\n\t}\r\n\r\n\tgenerate() {\r\n\t\tthis.first = 0;\r\n\t\tthis.last = this.perPageShow;\r\n\t\tlet loop = this.questionNumber;\r\n\t\tthis.GeneratedQuestions = [];\r\n\t\tthis.isQuizFinished = false;\r\n\t\tthis.IsQuizRunning = true;\r\n\t\tlet changeQuestion = loop / 2;\r\n\t\tfor (let i = 0; i < loop; i++) {\r\n\t\t\tthis.GeneratedQuestions.push({\r\n\t\t\t\tquestionNumber: i + 1,\r\n\t\t\t\tquestion: i >= changeQuestion ? this.makeRandomExpression() : this.makeRandomEquation(),\r\n\t\t\t\tisAnswered: false,\r\n\t\t\t\tgivenAnswer: '',\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t\ttype: i >= changeQuestion ? 'expression' : 'equation'\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.solvedAnswerCount = 0;\r\n\t\tthis.generateAnswerForm();\r\n\t}\r\n\r\n\tgenerateAnswerForm() {\r\n\t\tfor (let i = 0; i < this.questionNumber; i++) {\r\n\t\t\tthis.answer[i] = new FormControl('');\r\n\t\t}\r\n\t}\r\n\r\n\tmakeQuestionForm() {\r\n\t\tthis.questionForm = this.fb.group({\r\n\t\t\tquestionNumbers: [ '', Validators.required ],\r\n\t\t\tdifficulty: [ '', Validators.required ]\r\n\t\t});\r\n\t}\r\n\r\n\tmakeRandomEquation() {\r\n\t\tlet a, x, b, d, c;\r\n\t\ta = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\tb = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\tx = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\td = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\tc = this.practiceService.getCGivenabxd(a, b, x, d);\r\n\t\tlet equ = this.practiceService.makeStringGivenABCD(a, b, c, d);\r\n\r\n\t\tlet answers = this.practiceService.solveEquationConfirmed(equ);\r\n\t\t// answers.push(x);\r\n\t\tlet par = `Solve for x for the following equation ${equ}`;\r\n\t\tlet EquObject: QuestionInterface = {\r\n\t\t\tparsed: par,\r\n\t\t\tsolution: answers\r\n\t\t};\r\n\t\treturn EquObject;\r\n\t}\r\n\r\n\tmakeRandomExpression() {\r\n\t\tlet a, b, c, d;\r\n\t\ta = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\tb = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\t\tc = this.practiceService.getRandomIntWithinRange(this.minimumDifficulty, this.maximumDifficulty);\r\n\r\n\t\tlet equ = this.practiceService.makeExpression(a, b, c);\r\n\t\td = this.practiceService.solveExpression(equ);\r\n\r\n\t\tlet par = `Solve the following expression ${equ}`;\r\n\t\tlet EquObject: QuestionInterface = {\r\n\t\t\tparsed: par,\r\n\t\t\tsolution: d\r\n\t\t};\r\n\t\treturn EquObject;\r\n\t}\r\n\r\n\tmakeDifferentiationExpression() {}\r\n\r\n\tmakeIntegrationExpression() {}\r\n\r\n\tForward() {\r\n\t\tif (this.last < this.questionNumber) {\r\n\t\t\tthis.first += this.perPageShow;\r\n\t\t\tthis.last += this.perPageShow;\r\n\t\t}\r\n\t}\r\n\tBack() {\r\n\t\tif (this.first > 0) {\r\n\t\t\tthis.first -= this.perPageShow;\r\n\t\t\tthis.last -= this.perPageShow;\r\n\t\t}\r\n\t}\r\n\r\n\tturnInAnswer(number) {\r\n\t\tif (this.answer[number - 1].value != '') {\r\n\t\t\tthis.GeneratedQuestions[number - 1].isAnswered = true;\r\n\t\t\tthis.GeneratedQuestions[number - 1].givenAnswer = this.answer[number - 1].value;\r\n\r\n\t\t\tlet ans = this.GeneratedQuestions[number - 1].question.solution;\r\n\t\t\tlet givenAns1 = Number(this.answer[number - 1].value);\r\n\t\t\tlet givenAns2 = String(this.answer[number - 1].value);\r\n\r\n\t\t\tif (ans.includes(givenAns2) || ans.includes(givenAns1)) {\r\n\t\t\t\tthis.GeneratedQuestions[number - 1].isCorrect = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.GeneratedQuestions[number - 1].isCorrect = false;\r\n\t\t\t}\r\n\t\t\tthis.countGivenAnswer();\r\n\t\t} else {\r\n\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tmessage: 'Enter an answer or finish quiz',\r\n\t\t\t\t\tisAccepted: false\r\n\t\t\t\t},\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcountGivenAnswer() {\r\n\t\tlet loop = this.questionNumber;\r\n\t\tlet count = 0;\r\n\t\tfor (let i = 0; i < loop; i++) {\r\n\t\t\tif (this.GeneratedQuestions[i].isAnswered == true) {\r\n\t\t\t\tcount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.solvedAnswerCount = count;\r\n\t}\r\n\r\n\tfinishQuiz() {\r\n\t\tthis.sharedService\r\n\t\t\t.openConfirmationDialog({\r\n\t\t\t\ticon: 'error_outline',\r\n\t\t\t\tmessage: 'Are you sure to finish quiz?',\r\n\t\t\t\tnoButton: 'Cancel',\r\n\t\t\t\tyesButton: 'Confirm'\r\n\t\t\t})\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tlet loop = this.questionNumber;\r\n\t\t\t\t\tthis.correctAnswer = 0;\r\n\t\t\t\t\tfor (let i = 0; i < loop; i++) {\r\n\t\t\t\t\t\tif (this.GeneratedQuestions[i].isCorrect) {\r\n\t\t\t\t\t\t\tthis.correctAnswer += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.countGivenAnswer();\r\n\t\t\t\t\tthis.IsQuizRunning = false;\r\n\t\t\t\t\tthis.isQuizFinished = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tselectQuestion(num) {\r\n\t\tthis.selected = num;\r\n\t}\r\n\r\n\t@ViewChild('canvas') public canvas: ElementRef;\r\n\r\n\t@Input() public width = this.widthMinus;\r\n\t@Input() public height = this.canvasHeight;\r\n\r\n\t@HostListener('window:resize', [ '$event' ])\r\n\tonResize(event) {\r\n\t\tif (event.target.innerWidth - this.widthMinus > 500) {\r\n\t\t\tthis.canvasEl.width = this.widthMinus;\r\n\t\t} else {\r\n\t\t\tthis.canvasEl.width = this.canvasHeight;\r\n\t\t}\r\n\t\tthis.canvasEl.height = this.canvasHeight;\r\n\t}\r\n\r\n\tprivate cx: CanvasRenderingContext2D;\r\n\r\n\tpublic ngAfterViewInit() {\r\n\t\tthis.canvasEl = this.canvas.nativeElement;\r\n\t\tthis.cx = this.canvasEl.getContext('2d');\r\n\r\n\t\tthis.canvasEl.width = this.widthMinus;\r\n\t\tthis.canvasEl.height = this.canvasHeight;\r\n\t\tthis.cx.fillStyle = '#ffffff';\r\n\t\tthis.cx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n\t\tthis.cx.lineWidth = 5;\r\n\t\tthis.cx.lineCap = 'round';\r\n\t\tthis.cx.strokeStyle = '#000';\r\n\r\n\t\tthis.captureEvents(this.canvasEl);\r\n\t}\r\n\r\n\tprivate captureEvents(canvasEl: HTMLCanvasElement) {\r\n\t\tfromEvent(canvasEl, 'mousedown')\r\n\t\t\t.pipe(\r\n\t\t\t\tswitchMap((e) => {\r\n\t\t\t\t\treturn fromEvent(canvasEl, 'mousemove').pipe(\r\n\t\t\t\t\t\ttakeUntil(fromEvent(canvasEl, 'mouseup')),\r\n\t\t\t\t\t\ttakeUntil(fromEvent(canvasEl, 'mouseleave')),\r\n\t\t\t\t\t\tpairwise()\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((res: [MouseEvent, MouseEvent]) => {\r\n\t\t\t\tconst rect = canvasEl.getBoundingClientRect();\r\n\r\n\t\t\t\tconst prevPos = {\r\n\t\t\t\t\tx: res[0].clientX - rect.left,\r\n\t\t\t\t\ty: res[0].clientY - rect.top\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst currentPos = {\r\n\t\t\t\t\tx: res[1].clientX - rect.left,\r\n\t\t\t\t\ty: res[1].clientY - rect.top\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.drawOnCanvas(prevPos, currentPos);\r\n\t\t\t\t// this.saveImage();\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate drawOnCanvas(prevPos: { x: number; y: number }, currentPos: { x: number; y: number }) {\r\n\t\tif (!this.cx) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.cx.beginPath();\r\n\t\tif (prevPos && this.mode == 'pen') {\r\n\t\t\tthis.cx.globalCompositeOperation = 'source-over';\r\n\t\t\tthis.cx.lineWidth = 5;\r\n\t\t\tthis.cx.strokeStyle = '#000';\r\n\t\t\tthis.cx.moveTo(prevPos.x, prevPos.y); // from\r\n\t\t\tthis.cx.lineTo(currentPos.x, currentPos.y);\r\n\t\t\tthis.cx.stroke();\r\n\t\t} else if (prevPos && this.mode == 'eraser') {\r\n\t\t\tthis.cx.globalCompositeOperation = 'source-over';\r\n\t\t\tthis.cx.lineWidth = 20;\r\n\t\t\tthis.cx.strokeStyle = '#ffffff';\r\n\t\t\tthis.cx.moveTo(prevPos.x, prevPos.y); // from\r\n\t\t\tthis.cx.lineTo(currentPos.x, currentPos.y);\r\n\t\t\tthis.cx.stroke();\r\n\t\t}\r\n\t\tthis.saveImage();\r\n\t}\r\n\r\n\tchangeMode(name) {\r\n\t\tthis.mode = name;\r\n\t}\r\n\r\n\tclearCanvas() {\r\n\t\tthis.cx.clearRect(0, 0, this.cx.canvas.width, this.cx.canvas.height);\r\n\t\tthis.cx.fillStyle = '#ffffff';\r\n\t\tthis.cx.fillRect(0, 0, this.cx.canvas.width, this.cx.canvas.height); // Clears the canvas\r\n\t\t// this.clearAll();\r\n\t}\r\n\tsaveImage() {\r\n\t\tlet base64 = this.canvasEl.toDataURL('image/png');\r\n\t\tlet base64Data = base64.slice(22);\r\n\r\n\t\tlet blobfile = this.utilityService.b64toBlob(base64Data, 'image/png');\r\n\t\tlet f = new File([ blobfile ], 'test.jpg', { type: 'image/jpeg', lastModified: Date.now() });\r\n\t\tthis.croppedImageFile = f;\r\n\t\tthis.mathsolver\r\n\t\t\t.predictBase64({\r\n\t\t\t\tbase64: base64Data\r\n\t\t\t})\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tif (this.IsQuizRunning) {\r\n\t\t\t\t\tthis.answer[this.selected - 1].patchValue(res.equation);\r\n\t\t\t\t}\r\n\t\t\t\t// this.equationForm.patchValue({\r\n\t\t\t\t// \tequation: res.equation\r\n\t\t\t\t// });\r\n\t\t\t\t// this.solve();\r\n\t\t\t\t// this.solveMathjs();\r\n\t\t\t});\r\n\t}\r\n}\r\n","import { ConfigModule } from './../config/config.module';\r\nimport { CoreModule } from './../core/core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PracticeDefaultComponent } from './components/practice-default/practice-default.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\nconst routes:Routes=[\r\n  {\r\n    path:'',\r\n    component:PracticeDefaultComponent\r\n  }\r\n]\r\n@NgModule({\r\n  declarations: [PracticeDefaultComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    CoreModule,\r\n    ConfigModule\r\n  ]\r\n})\r\nexport class MathpracticeModule { }\r\n","import { MathsolverService } from './../../mathsolver/services/mathsolver.service';\r\nimport { MathsolverModule } from './../../mathsolver/mathsolver.module';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n\tatan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt,parser\r\n  } from 'mathjs'\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class PracticeService {\r\n    mathsteps = require('mathsteps');\r\n\talgebra = require('algebra.js');\r\n\r\n\tconstructor(private mathSolver:MathsolverService) {\r\n\t}\r\n\r\n\tgetRandomIntWithinRange(min, max) {\r\n\t\tmin = Math.ceil(min);\r\n\t\tmax = Math.floor(max);\r\n\t\tlet final = Math.floor(Math.random() * (max - min)) + min;\r\n\t\tif (final == 0) {\r\n\t\t\treturn final + 1;\r\n\t\t} else {\r\n\t\t\treturn final; //The maximum is exclusive and the minimum is inclusive\r\n\t\t}\r\n\t}\r\n\r\n\tmakeStringGivenABCD(a, b, c, d) {\r\n\t\tlet finalEquation = ``;\r\n\t\tlet dif = c - d;\r\n\t\tif (a == 1) {\r\n\t\t\tfinalEquation += `x^2`;\r\n\t\t} else if (a == -1) {\r\n\t\t\tfinalEquation += `-x^2`;\r\n\t\t} else {\r\n\t\t\tfinalEquation += `${a}x^2`;\r\n\t\t}\r\n\t\tif (b > 0) {\r\n\t\t\tif (b == 1) {\r\n\t\t\t\tfinalEquation += `+x`;\r\n\t\t\t} else {\r\n\t\t\t\tfinalEquation += `+${b}x`;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b < 0) {\r\n      if (b == -1) {\r\n\t\t\t\tfinalEquation += `-x`;\r\n\t\t\t} else {\r\n        finalEquation += `${b}x`;\r\n\t\t\t}\r\n\t\t\t// finalEquation += `${b}x`;\r\n\t\t}\r\n\t\tif (dif > 0) {\r\n\t\t\tfinalEquation += `+${dif}`;\r\n\t\t}\r\n\t\tif (dif < 0) {\r\n\t\t\tfinalEquation += `${dif}`;\r\n\t\t}\r\n\t\tfinalEquation += '=0';\r\n\r\n\t\treturn finalEquation;\r\n\t}\r\n\r\n\tgetCGivenabxd(a, b, x, d) {\r\n\t\tlet c;\r\n\t\tc = d - (a * x ** 2 + b * x);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tsolveEquationConfirmed(parsed) {\r\n\t\tparsed=this.algebra.parse(parsed);\r\n\t\tlet X = parsed.solveFor('x');\r\n\t\tlet answer=[];\r\n\t\tif(X && X[0]){\r\n\t\t\tanswer.push(X[0].toString());\r\n\t\t}\r\n\t\tif(X && X[1]){\r\n\t\t\tanswer.push(X[1].toString());\r\n\r\n\t\t}\r\n\t\treturn answer;\r\n\t}\r\n\r\n\tmakeExpression(a,b,c){\r\n\t\tlet exp=['+','-','*'];\r\n\t\tif(a<0){\r\n\t\t\ta=(-1)*a;\r\n\t\t}\r\n\t\tif(b<0){\r\n\t\t\tb=(-1)*b;\r\n\t\t}\r\n\t\tif(c<0){\r\n\t\t\tc=(-1)*c;\r\n\t\t}\r\n\t\tlet i=this.getRandomIntWithinRange(0,3);\r\n\t\tlet j=this.getRandomIntWithinRange(0,3);\r\n\r\n\r\n\t\treturn String(`${a}${exp[i]}${b}${exp[j]}${c}`);\r\n\t}\r\n\tsolveExpression(equ){\r\n\t\treturn\tthis.mathSolver.solve(equ);\r\n\t}\r\n\t\r\n}\r\n"],"sourceRoot":""}