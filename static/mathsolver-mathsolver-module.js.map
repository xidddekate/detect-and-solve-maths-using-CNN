{"version":3,"sources":["webpack:///./src/app/mathsolver/components/draw/draw.component.html","webpack:///./src/app/mathsolver/components/draw/draw.component.scss","webpack:///./src/app/mathsolver/components/draw/draw.component.ts","webpack:///./src/app/mathsolver/components/solve/solve.component.html","webpack:///./src/app/mathsolver/components/solve/solve.component.scss","webpack:///./src/app/mathsolver/components/solve/solve.component.ts","webpack:///./src/app/mathsolver/components/upload/upload.component.html","webpack:///./src/app/mathsolver/components/upload/upload.component.scss","webpack:///./src/app/mathsolver/components/upload/upload.component.ts","webpack:///./src/app/mathsolver/mathsolver.module.ts"],"names":[],"mappings":"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","file":"mathsolver-mathsolver-module.js","sourcesContent":["module.exports = \"<div class='margin-auto p-64'>\\r\\n  <div fxLayout='row' fxLayoutAlign=\\\"center center\\\" class='font-size-24'>Draw Below</div>\\r\\n  <div fxLayout='row' fxLayoutAlign=\\\"center center\\\" class='p-24 margin-auto w-100-p'>\\r\\n    <canvas #canvas id='myCanvas' class='mat-elevation-z8 dropzone '\\r\\n      [ngClass]=\\\"mode=='pen' ? 'crosshair' : 'rubber' \\\"></canvas>\\r\\n\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\" class='pb-16'>\\r\\n    <button mat-stroked-button color=\\\"primary\\\" (click)='changeMode(\\\"eraser\\\")'\\r\\n      class='w-170 font-size-16 cornsilk-background'>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n        <i class=\\\"material-icons font-size-16 pl-22\\\">\\r\\n          crop_16_9\\r\\n        </i>\\r\\n        <div>Eraser</div>\\r\\n      </div>\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)='changeMode(\\\"pen\\\")'\\r\\n      class='w-170 black-color-background font-size-16'>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n        <i class=\\\"material-icons font-size-16 pl-22\\\">\\r\\n          create\\r\\n        </i>\\r\\n        <div>Pencil</div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)='clearCanvas()' class='w-170  font-size-16'>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n        <i class=\\\"material-icons font-size-16 pl-22\\\">\\r\\n          close\\r\\n        </i>\\r\\n        <div>Clear</div>\\r\\n      </div>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\" class='pb-16'>\\r\\n    <button mat-raised-button (click)='saveImage()' class='w-224 accepted-color-background font-size-16'>Upload</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <form [formGroup]=\\\"equationForm\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14' ,'mat-icon-for-input']\\\">\\r\\n          Equation: </div>\\r\\n        <div fxFlex='80'>\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <input matInput type='text' formControlName='equation' class='font-size-20'>\\r\\n            <mat-error *ngIf=\\\"equationForm.get('equation').touched && equationForm.get('equation').invalid\\\">Invalid\\r\\n              Equation</mat-error>\\r\\n            <mat-error\\r\\n              *ngIf=\\\"!equationForm.get('equation').touched && equationForm.get('equation').hasError('required')\\\">\\r\\n              Equation Required</mat-error>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14' ,'mat-icon-for-input']\\\">\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex='80' >\\r\\n          <div *ngIf='isSolved==true' class=' px-24 pt-24 pb-12'>\\r\\n            \\r\\n           \\r\\n              <div *ngFor='let i of solutionSteps'>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"  class=' mb-12'>\\r\\n                  <div fxFlex.lt-md='50' fxFlex='40' class='font-size-20'><i class=\\\"material-icons font-size-16 mr-12\\\">adjust</i> {{i.newEquation}}</div>\\r\\n                  <div fxFlex.lt-md='50' fxFlex='60' class='font-size-16'>{{i.change}}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14','mat-icon-for-input']\\\">Solution:\\r\\n        </div>\\r\\n        <div fxFlex='80'>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n\\r\\n            <input matInput type='text' formControlName='solution' class='font-size-20'>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" class='w-200' (click)='solveMathjs()'>SOLVE</button>\\r\\n      </div>\\r\\n      <div *ngIf='isAuthenticated && isSavable' fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button mat-stroked-button color=\\\"primary\\\" class='w-200' (click)='save()'>SAVE</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </form>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".crosshair {\\n  cursor: crosshair; }\\n\\n.rubber {\\n  cursor: cell; }\\n\\n.custom-border {\\n  border: 4px solid #222858; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0aHNvbHZlci9jb21wb25lbnRzL2RyYXcvQzpcXFVzZXJzXFxTdWRoYW5zaHVcXC52c2NvZGVcXFBST0pFQ1RTXFxNTFxcYW5ndWxhci1mbGFza1xcYW5ndWxhci9zcmNcXGFwcFxcbWF0aHNvbHZlclxcY29tcG9uZW50c1xcZHJhd1xcZHJhdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGlCQUFpQixFQUFBOztBQUVyQjtFQUNJLFlBQVksRUFBQTs7QUFJaEI7RUFDSSx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21hdGhzb2x2ZXIvY29tcG9uZW50cy9kcmF3L2RyYXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjYW52YXMgeyBcclxuLy8gICAgIGN1cnNvcjogY3Jvc3NoYWlyO1xyXG4vLyB9XHJcbi5jcm9zc2hhaXJ7XHJcbiAgICBjdXJzb3I6IGNyb3NzaGFpcjtcclxufVxyXG4ucnViYmVye1xyXG4gICAgY3Vyc29yOiBjZWxsO1xyXG4gICAgXHJcbn1cclxuXHJcbi5jdXN0b20tYm9yZGVye1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgIzIyMjg1ODtcclxufSJdfQ== */\"","import { Content } from './../../../config/interfaces/content.interface';\r\nimport { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Input, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { switchMap, takeUntil, pairwise, first } from 'rxjs/operators';\r\nimport { MathsolverService } from '../../services/mathsolver.service';\r\nimport { UtilityService } from 'src/app/core/utility-service/utility.service';\r\nimport canvasToImage from 'canvas-to-image';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { SharedService } from 'src/app/shared/services/shared.service';\r\n@Component({\r\n\tselector: 'app-draw',\r\n\ttemplateUrl: './draw.component.html',\r\n\tstyleUrls: [ './draw.component.scss' ]\r\n})\r\nexport class DrawComponent implements OnInit, AfterViewInit {\r\n\tcanvasEl: HTMLCanvasElement;\r\n\twidthMinus = 300;\r\n\tcanvasHeight=300;\r\n\tmode = 'pen';\r\n\tcheck;\r\n\tuploadForm: FormGroup;\r\n\tequationForm: FormGroup;\r\n\tisAuthenticated: boolean = false;\r\n\tisSavable: boolean = false;\r\n\tuserId: string = '';\r\n\timageLink: any;\r\n\tcroppedImageFile: File = null;\r\n\r\n\tbeforeChange;\r\n\tchange;\r\n\tafterchange;\r\n\tnumberOfChange;\r\n\tisSolved:boolean=false;\r\n\tsolutionSteps=[];\r\n\r\n\r\n\tderivativeX;\r\n\tderivativeY;\r\n\r\n\tconstructor(\r\n\t\tprivate utilityService: UtilityService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate mathSolver: MathsolverService,\r\n\t\tprivate sharedService: SharedService\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.makeEquationForm();\r\n\t\tthis.makeUploadForm();\r\n\t\tthis.checkUser();\r\n\t}\r\n\tmakeEquationForm() {\r\n\t\tthis.equationForm = this.fb.group({\r\n\t\t\tequation: [ '', [ Validators.required ] ],\r\n\t\t\tsolution: [ '' ]\r\n\t\t});\r\n\t}\r\n\r\n\tmakeUploadForm() {\r\n\t\tthis.uploadForm = this.fb.group({\r\n\t\t\tpicture: [ null ]\r\n\t\t});\r\n\t}\r\n\r\n\tcheckUser() {\r\n\t\tthis.mathSolver.isUserLoggedIn().subscribe((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.isAuthenticated = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.isAuthenticated = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t@ViewChild('canvas') public canvas: ElementRef;\r\n\r\n\t@Input() public width = this.widthMinus;\r\n\t@Input() public height = this.canvasHeight;\r\n\r\n\t@HostListener('window:resize', [ '$event' ])\r\n\tonResize(event) {\r\n\t\tif (event.target.innerWidth - this.widthMinus > 500) {\r\n\t\t\tthis.canvasEl.width = event.target.innerWidth - this.widthMinus;\r\n\t\t} else {\r\n\t\t\tthis.canvasEl.width = event.target.innerWidth - 100;\r\n\t\t}\r\n\t\tthis.canvasEl.height = this.canvasHeight;\r\n\t}\r\n\r\n\tprivate cx: CanvasRenderingContext2D;\r\n\r\n\tpublic ngAfterViewInit() {\r\n\t\tthis.canvasEl = this.canvas.nativeElement;\r\n\t\tthis.cx = this.canvasEl.getContext('2d');\r\n\r\n\t\tthis.canvasEl.width = screen.width - this.widthMinus;\r\n\t\tthis.canvasEl.height = this.canvasHeight;\r\n\t\tthis.cx.fillStyle = '#ffffff';\r\n\t\tthis.cx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n\t\tthis.cx.lineWidth = 5;\r\n\t\tthis.cx.lineCap = 'round';\r\n\t\tthis.cx.strokeStyle = '#000';\r\n\r\n\t\tthis.captureEvents(this.canvasEl);\r\n\t}\r\n\r\n\tprivate captureEvents(canvasEl: HTMLCanvasElement) {\r\n\t\tfromEvent(canvasEl, 'mousedown')\r\n\t\t\t.pipe(\r\n\t\t\t\tswitchMap((e) => {\r\n\t\t\t\t\treturn fromEvent(canvasEl, 'mousemove').pipe(\r\n\t\t\t\t\t\ttakeUntil(fromEvent(canvasEl, 'mouseup')),\r\n\t\t\t\t\t\ttakeUntil(fromEvent(canvasEl, 'mouseleave')),\r\n\t\t\t\t\t\tpairwise()\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((res: [MouseEvent, MouseEvent]) => {\r\n\t\t\t\tconst rect = canvasEl.getBoundingClientRect();\r\n\r\n\t\t\t\tconst prevPos = {\r\n\t\t\t\t\tx: res[0].clientX - rect.left,\r\n\t\t\t\t\ty: res[0].clientY - rect.top\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst currentPos = {\r\n\t\t\t\t\tx: res[1].clientX - rect.left,\r\n\t\t\t\t\ty: res[1].clientY - rect.top\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.drawOnCanvas(prevPos, currentPos);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate drawOnCanvas(prevPos: { x: number; y: number }, currentPos: { x: number; y: number }) {\r\n\t\tif (!this.cx) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.cx.beginPath();\r\n\t\tif (prevPos && this.mode == 'pen') {\r\n\t\t\tthis.cx.globalCompositeOperation = 'source-over';\r\n\t\t\tthis.cx.lineWidth = 5;\r\n\t\t\tthis.cx.strokeStyle = '#000';\r\n\t\t\tthis.cx.moveTo(prevPos.x, prevPos.y); // from\r\n\t\t\tthis.cx.lineTo(currentPos.x, currentPos.y);\r\n\t\t\tthis.cx.stroke();\r\n\t\t} else if (prevPos && this.mode == 'eraser') {\r\n\t\t\tthis.cx.globalCompositeOperation = 'source-over';\r\n\t\t\tthis.cx.lineWidth = 20;\r\n\t\t\tthis.cx.strokeStyle = '#ffffff';\r\n\t\t\tthis.cx.moveTo(prevPos.x, prevPos.y); // from\r\n\t\t\tthis.cx.lineTo(currentPos.x, currentPos.y);\r\n\t\t\tthis.cx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\tchangeMode(name) {\r\n\t\tthis.mode = name;\r\n\t}\r\n\r\n\tclearCanvas() {\r\n\t\tthis.cx.clearRect(0, 0, this.cx.canvas.width, this.cx.canvas.height);\r\n\t\tthis.cx.fillStyle = '#ffffff';\r\n\t\tthis.cx.fillRect(0, 0, this.cx.canvas.width, this.cx.canvas.height); // Clears the canvas\r\n\t\tthis.clearAll();\r\n\t}\r\n\tclearAll(){\r\n\t\tthis.croppedImageFile = null;\r\n\t\tthis.isSavable = false;\r\n\t\tthis.equationForm.patchValue({\r\n\t\t\tequation: '',\r\n\t\t\tsolution: ''\r\n\t\t});\r\n\t\tthis.isSolved=false;\r\n\t}\r\n\r\n\tsaveImage() {\r\n\t\tlet base64 = this.canvasEl.toDataURL('image/png');\r\n\t\tlet base64Data = base64.slice(22);\r\n\r\n\t\tlet blobfile=this.utilityService.b64toBlob(base64Data,'image/png')\r\n\t\tlet f = new File([ blobfile ], 'test.jpg', { type: 'image/jpeg', lastModified: Date.now() });\r\n\t\tthis.croppedImageFile = f;\r\n\t\tthis.mathSolver\r\n\t\t\t.predictBase64({\r\n\t\t\t\tbase64: base64Data\r\n\t\t\t})\r\n\t\t\t.subscribe((res) => {\r\n\t\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\t\tequation: res.equation\r\n\t\t\t\t});\r\n\t\t\t\t// this.solve();\r\n\t\t\t\tthis.solveMathjs();\r\n\t\t\t});\r\n\t}\r\n\r\n\ttryDerivative(){\r\n\t\t// debugger;\r\n\t\tlet equ=this.equationForm.get('solution').value;\r\n\t\tlet x,y;\r\n\t\tfor(let i of equ){\r\n\r\n\t\t\tif(i=='x'){\r\n\r\n\t\t\t\tx=this.mathSolver.solveDerivative(equ,'x');\r\n\r\n\t\t\t}\r\n\t\t\telse if(i=='y'){\r\n\r\n\t\t\t\ty=this.mathSolver.solveDerivative(equ,'y');\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.derivativeX=x;\r\n\t\tthis.derivativeY=y;\r\n\t\tif(this.derivativeX){\r\n\t\t\tlet sol=this.equationForm.get('solution').value\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: `${sol}, Derivation with respect to x : ${this.derivativeX}`\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.derivativeY){\r\n\t\t\tlet sol=this.equationForm.get('solution').value\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: `${sol}, Derivation with respect to y : ${this.derivativeY}`\r\n\t\t\t});\r\n\t\t}\r\n\t\t// console.log(x,y);\r\n\t}\r\n\r\n\tsolveMathjs(){\r\n\r\n\t\tlet equation = this.equationForm.get('equation').value;\r\n\t\tlet solutions=this.mathSolver.solveEquationWithMathJs(equation);\r\n\t\tlet solution;\r\n\t\tthis.solutionSteps=[];\r\n\t\tsolutions.forEach(step => {\t\r\n\t\t\tif(step && step.newNode){\r\n\t\t\t\tsolution=step.newNode.toString();\r\n\t\t\t\tthis.solutionSteps.push({\r\n\t\t\t\t\t'change':step.changeType,\r\n\t\t\t\t\t'newEquation':step.newNode.toString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(step && step.newEquation){\r\n\t\t\t\tsolution=step.newEquation.ascii();\r\n\t\t\t\tthis.solutionSteps.push({\r\n\t\t\t\t\t'change':step.changeType,\r\n\t\t\t\t\t'newEquation':step.newEquation.ascii()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.isSolved=true;\r\n\t\tif (!solution) {\r\n\t\t\tthis.solve();\r\n\t\t\t// solution = 'Sorry No Solution found';\r\n\t\t\t// this.isSolved=false;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: solution\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(this.croppedImageFile){\r\n\t\t\tthis.isSavable = true;\r\n\r\n\t\t}\r\n\t\tthis.tryDerivative();\r\n\r\n\t}\r\n\tsolve() {\r\n\t\tlet equation = this.equationForm.get('equation').value;\r\n\t\tlet solution = this.mathSolver.solve(equation);\r\n\t\t\r\n\t\tif (!solution) {\r\n\t\t\tsolution = 'Sorry No Solution found';\r\n\t\t}\r\n\t\tthis.equationForm.patchValue({\r\n\t\t\tsolution: solution\r\n\t\t});\r\n\t\tif(this.croppedImageFile){\r\n\t\t\tthis.isSavable = true;\r\n\r\n\t\t}\r\n\t}\r\n\t// solve() {\r\n\t// \tlet equation = this.equationForm.get('equation').value;\r\n\t// \tlet solution = this.mathSolver.solve(equation);\r\n\t\t\r\n\t// \tdebugger;\r\n\t// \tif (!solution) {\r\n\t// \t\tsolution = 'Sorry No Solution found';\r\n\t// \t}\r\n\t// \tthis.equationForm.patchValue({\r\n\t// \t\tsolution: solution\r\n\t// \t});\r\n\t// \tif(this.croppedImageFile){\r\n\t// \t\tthis.isSavable = true;\r\n\r\n\t// \t}\r\n\t// }\r\n\tuploadFileToFirebase(): Observable<any> {\r\n\t\treturn new Observable((obs) => {\r\n\t\t\tlet filepath = `${this.userId}/${this.croppedImageFile.name}_${new Date().getTime()}`;\r\n\t\t\tthis.mathSolver.uploadFileToFirebase(filepath, this.croppedImageFile).subscribe(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tthis.imageLink = res;\r\n\t\t\t\t\tobs.next(res);\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tobs.error(err);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\tsave() {\r\n\t\tthis.mathSolver.getUserId().pipe(first()).subscribe((res) => {\r\n\t\t\tthis.sharedService.startSpinner();\r\n\t\t\tthis.userId = res;\r\n\t\t\tthis.uploadFileToFirebase().subscribe(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tlet con: Content = {\r\n\t\t\t\t\t\tuserId: this.userId,\r\n\t\t\t\t\t\tcreatedTime: new Date(),\r\n\t\t\t\t\t\tequation: this.equationForm.get('equation').value,\r\n\t\t\t\t\t\tsolution: this.equationForm.get('solution').value,\r\n\t\t\t\t\t\tuid: this.sharedService.generateGUID(),\r\n\t\t\t\t\t\timageLink: this.imageLink\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (con.userId && con.equation && con.solution) {\r\n\t\t\t\t\t\tthis.mathSolver.saveContent(con);\r\n\t\t\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tmessage: 'Saved into account',\r\n\t\t\t\t\t\t\t\tisAccepted: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.sharedService.hideSpinner();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\tmessage: 'Please Give a equation and solution',\r\n\t\t\t\t\t\t\t\tisAccepted: false\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.sharedService.hideSpinner();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tthis.sharedService.hideSpinner();\r\n\r\n\t\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tmessage: 'Internal server error',\r\n\t\t\t\t\t\t\tisAccepted: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"equationForm\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayoutGap=\\\"12px\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <div fxFlex='20' ngClass='mat-icon-for-input font-size-20' [ngClass.lt-lg]=\\\"['font-size-14' ,'mat-icon-for-input']\\\">\\r\\n        Equation: </div>\\r\\n      <div fxFlex='80'>\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <!-- <mat-label>Parsed Equation</mat-label> -->\\r\\n          <input matInput type='text' formControlName='equation' class='font-size-20'>\\r\\n          <mat-error *ngIf=\\\"equationForm.get('equation').touched && equationForm.get('equation').invalid\\\">Invalid Equation</mat-error>\\r\\n          <mat-error *ngIf=\\\"!equationForm.get('equation').touched && equationForm.get('equation').hasError('required')\\\">Equation Required</mat-error>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n      <div fxFlex='20' ngClass='mat-icon-for-input font-size-20' [ngClass.lt-lg]=\\\"['font-size-14','mat-icon-for-input']\\\">Solution:\\r\\n      </div>\\r\\n      <div fxFlex='80'>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <!-- <mat-label>Solution</mat-label> -->\\r\\n\\r\\n          <input matInput type='text' formControlName='solution' class='font-size-20'>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" class='w-200' (click)='solve()'>SOLVE</button>\\r\\n    </div>\\r\\n    <div *ngIf='isAuthenticated && isSavable' fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <button mat-stroked-button color=\\\"primary\\\" class='w-200' (click)='save()'>SAVE</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hdGhzb2x2ZXIvY29tcG9uZW50cy9zb2x2ZS9zb2x2ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UtilityService } from '../../../core/utility-service/utility.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MathsolverService } from '../../services/mathsolver.service';\r\nimport { SharedService } from '../../../shared/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-solve',\r\n  templateUrl: './solve.component.html',\r\n  styleUrls: ['./solve.component.scss']\r\n})\r\nexport class SolveComponent implements OnInit {\r\n  uploadForm: FormGroup;\r\n  equationForm: FormGroup;\r\n\tisAuthenticated: boolean = false;\r\n\tisSavable: boolean = false;\r\n  \r\n  constructor(\r\n    private utilityService: UtilityService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate mathSolver: MathsolverService,\r\n\t\tprivate sharedService: SharedService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.makeEquationForm();\r\n\t\tthis.checkUser();\r\n  }\r\n  makeEquationForm() {\r\n\t\tthis.equationForm = this.fb.group({\r\n\t\t\tequation: [ '', [ Validators.required ] ],\r\n\t\t\tsolution: [ '' ]\r\n\t\t});\r\n  }\r\n  checkUser() {\r\n\t\tthis.mathSolver.isUserLoggedIn().subscribe((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.isAuthenticated = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.isAuthenticated = false;\r\n\t\t\t}\r\n\t\t});\r\n  }\r\n  solve() {\r\n\t\tlet equation = this.equationForm.get('equation').value;\r\n\t\tlet solution = this.mathSolver.solveEquation(equation);\r\n\t\tif (!solution) {\r\n\t\t\tsolution = 'Sorry No Solution found';\r\n\t\t}\r\n\t\tthis.equationForm.patchValue({\r\n\t\t\tsolution: solution\r\n\t\t});\r\n\t\tthis.isSavable=true;\r\n\t}\r\n\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch \\\" class='margin-auto p-64' fxLayoutGap=\\\"16px\\\">\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch \\\" fxLayoutGap=\\\"24px\\\">\\r\\n    <div>\\r\\n\\r\\n      <div *ngIf='!isValid' fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center \\\" fxLayoutGap=\\\"12px\\\"\\r\\n        class='dropzone p-24 margin-auto h-200' dropZone (hovered)=\\\"toggleHover($event)\\\"\\r\\n        (dropped)=\\\"fileSelected($event)\\\" [class.hovering]=\\\"isHovering\\\" (change)=\\\"fileSelected($event)\\\">\\r\\n        <div class='font-size-20'>\\r\\n          Drag and Drop your picture\\r\\n        </div>\\r\\n        <div class=\\\"file\\\">\\r\\n          <label class=\\\"file-label\\\">\\r\\n            <input class=\\\"file-input\\\" type=\\\"file\\\" (change)=\\\"fileSelected($event)\\\">\\r\\n\\r\\n            <span class=\\\"file-cta\\\">\\r\\n              <span class=\\\"file-icon\\\">\\r\\n                <i class=\\\"fa fa-upload\\\"></i>\\r\\n              </span>\\r\\n              <span class=\\\"file-label\\\">\\r\\n                or choose a file…\\r\\n              </span>\\r\\n            </span>\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf='isValid' fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n        <div class='w-100-p'>\\r\\n          <image-cropper [imageChangedEvent]=\\\"imageChangedEvent\\\" [imageBase64]=\\\"initialBase64pic\\\"\\r\\n            [maintainAspectRatio]=\\\"false\\\" format=\\\"jpeg\\\" (imageCropped)=\\\"imageCropped($event)\\\"\\r\\n            (imageLoaded)=\\\"imageLoaded()\\\" (cropperReady)=\\\"cropperReady()\\\" (loadImageFailed)=\\\"loadImageFailed()\\\"\\r\\n            [aspectRatio]=\\\"4 / 3\\\" [autoCrop]=\\\"true\\\">\\r\\n          </image-cropper>\\r\\n        </div>\\r\\n        <div>\\r\\n          <img [src]=\\\"croppedImage\\\" id='croppedImage' />\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <button mat-raised-button color=\\\"warn\\\" class='w-200' (click)='upload()'>UPLOAD</button>\\r\\n      <button *ngIf='isValid' mat-stroked-button color=\\\"primary\\\" class='w-200' (click)='reupload()'>REUPLOAD</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form [formGroup]=\\\"equationForm\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center stretch\\\" fxLayoutGap=\\\"12px\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14' ,'mat-icon-for-input']\\\">\\r\\n          Equation: </div>\\r\\n        <div fxFlex='80'>\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <input matInput type='text' formControlName='equation' class='font-size-20'>\\r\\n            <mat-error *ngIf=\\\"equationForm.get('equation').touched && equationForm.get('equation').invalid\\\">Invalid\\r\\n              Equation</mat-error>\\r\\n            <mat-error\\r\\n              *ngIf=\\\"!equationForm.get('equation').touched && equationForm.get('equation').hasError('required')\\\">\\r\\n              Equation Required</mat-error>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14' ,'mat-icon-for-input']\\\">\\r\\n        </div>\\r\\n\\r\\n        <div fxFlex='80'>\\r\\n          <div *ngIf='isSolved==true' class=' px-24 pt-24 pb-12'>\\r\\n\\r\\n\\r\\n            <div *ngFor='let i of solutionSteps'>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=' mb-12'>\\r\\n                <div fxFlex.lt-md='50' fxFlex='40' class='font-size-20'><i\\r\\n                    class=\\\"material-icons font-size-16 mr-12\\\">adjust</i> {{i.newEquation}}</div>\\r\\n                <div fxFlex.lt-md='50' fxFlex='60' class='font-size-16'>{{i.change}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div fxFlex='20' ngClass='mat-icon-for-input font-size-20'\\r\\n          [ngClass.lt-lg]=\\\"['font-size-14','mat-icon-for-input']\\\">Solution:\\r\\n        </div>\\r\\n        <div fxFlex='80'>\\r\\n\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n\\r\\n            <input matInput type='text' formControlName='solution' class='font-size-20'>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" class='w-200' (click)='solveMathjs()'>SOLVE</button>\\r\\n      </div>\\r\\n      <div *ngIf='isAuthenticated && isSavable' fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button mat-stroked-button color=\\\"primary\\\" class='w-200' (click)='save()'>SAVE</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <!-- <app-solve></app-solve> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hdGhzb2x2ZXIvY29tcG9uZW50cy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Content } from './../../../config/interfaces/content.interface';\r\nimport { SharedService } from './../../../shared/services/shared.service';\r\nimport { element } from 'protractor';\r\nimport { Equation } from './../../../config/interfaces/mathplanet.interface';\r\nimport { MathsolverService } from './../../services/mathsolver.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\nimport { UtilityService } from '../../../core/utility-service/utility.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n// import { type } from 'os';\r\n\r\n@Component({\r\n\tselector: 'app-upload',\r\n\ttemplateUrl: './upload.component.html',\r\n\tstyleUrls: [ './upload.component.scss' ]\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\t// Progress monitoring\r\n\r\n\t// Download URL\r\n\r\n\t// State for dropzone CSS toggling\r\n\tisHovering: boolean;\r\n\timageChangedEvent: any = '';\r\n\timageblob: any = '';\r\n\tcroppedImage: any = '';\r\n\tcroppedImageFile: File = null;\r\n\tisValid = false;\r\n\tinitialBase64pic: any = '';\r\n\tuploadForm: FormGroup;\r\n\tequationForm: FormGroup;\r\n\tformData = new FormData();\r\n\tisAuthenticated: boolean = false;\r\n\tuserId: string = '';\r\n\tisSavable: boolean = false;\r\n\timageLink:any;\r\n\tsolutionSteps=[];\r\n\tisSolved:boolean=false;\r\n\r\n\tconstructor(\r\n\t\tprivate utilityService: UtilityService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate mathSolver: MathsolverService,\r\n\t\tprivate sharedService: SharedService\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.makeEquationForm();\r\n\t\tthis.makeUploadForm();\r\n\t\tthis.checkUser();\r\n\r\n\t}\r\n\r\n\tmakeEquationForm() {\r\n\t\tthis.equationForm = this.fb.group({\r\n\t\t\tequation: [ '', [ Validators.required ] ],\r\n\t\t\tsolution: [ '' ]\r\n\t\t});\r\n\t}\r\n\r\n\tmakeUploadForm() {\r\n\t\tthis.uploadForm = this.fb.group({\r\n\t\t\tpicture: [ null ]\r\n\t\t});\r\n\t}\r\n\r\n\tcheckUser() {\r\n\t\tthis.mathSolver.isUserLoggedIn().subscribe((res) => {\r\n\t\t\tif (res) {\r\n\t\t\t\tthis.isAuthenticated = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.isAuthenticated = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfileSelected(event) {\r\n\t\tif (event && event.target && event.target.files.length > 0) {\r\n\t\t\tif (this.utilityService.ifFileImage(event.target.files[0])) {\r\n\t\t\t\tthis.imageblob = event.target.files[0];\r\n\t\t\t\tthis.convertFiletoBase64(this.imageblob);\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t}\r\n\t\t} else if (event instanceof FileList) {\r\n\t\t\tif (this.utilityService.ifFileImage(event[0])) {\r\n\t\t\t\tthis.imageblob = event[0];\r\n\t\t\t\tthis.convertFiletoBase64(this.imageblob);\r\n\t\t\t\tthis.isValid = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\timageCropped(event: ImageCroppedEvent) {\r\n\t\tthis.croppedImage = event.base64;\r\n\t\tlet blobfile = event.file;\r\n\t\tlet f = new File([ blobfile ], 'test.jpg', { type: 'image/jpeg', lastModified: Date.now() });\r\n\t\tthis.croppedImageFile = f;\r\n\t}\r\n\r\n\tupload() {\r\n\t\tlet f = new FormData();\r\n\t\tif (this.croppedImageFile != null) {\r\n\t\t\tf.append('file', this.croppedImageFile, 'test.jpg');\r\n\r\n\t\t\tthis.mathSolver.predictImage(f).pipe(first()).subscribe((res) => {\r\n\t\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\t\tequation: res.equation\r\n\t\t\t\t});\r\n\t\t\t\tthis.solveMathjs();\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tmessage: 'Please Select a file',\r\n\t\t\t\t\tisAccepted: false\r\n\t\t\t\t},\r\n\t\t\t\tduration: 3,\r\n\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treupload() {\r\n\t\tthis.isValid = !this.isValid;\r\n\t\tthis.imageblob = '';\r\n\t\tthis.croppedImage = '';\r\n\t\tthis.croppedImageFile = null;\r\n\t\tthis.isSavable = false;\r\n\t\tthis.isSolved=false;\r\n\t\tthis.equationForm.patchValue({\r\n\t\t\tequation: '',\r\n\t\t\tsolution: ''\r\n\t\t});\r\n\t}\r\n\r\n\tsolve() {\r\n\t\tlet equation = this.equationForm.get('equation').value;\r\n\t\tlet solution = this.mathSolver.solve(equation);\r\n\t\tif (!solution) {\r\n\t\t\tsolution = 'Sorry No Solution found';\r\n\t\t}\r\n\t\tthis.equationForm.patchValue({\r\n\t\t\tsolution: solution\r\n\t\t});\r\n\t\tif(this.croppedImageFile){\r\n\t\t\tthis.isSavable = true;\r\n\r\n\t\t}\r\n\t}\r\n\tsolveMathjs(){\r\n\r\n\t\tlet equation = this.equationForm.get('equation').value;\r\n\t\tlet solutions=this.mathSolver.solveEquationWithMathJs(equation);\r\n\t\tlet solution;\r\n\t\tthis.solutionSteps=[];\r\n\t\tsolutions.forEach(step => {\t\r\n\t\t\tif(step && step.newNode){\r\n\t\t\t\tsolution=step.newNode.toString();\r\n\t\t\t\tthis.solutionSteps.push({\r\n\t\t\t\t\t'change':step.changeType,\r\n\t\t\t\t\t'newEquation':step.newNode.toString()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(step && step.newEquation){\r\n\t\t\t\tsolution=step.newEquation.ascii();\r\n\t\t\t\tthis.solutionSteps.push({\r\n\t\t\t\t\t'change':step.changeType,\r\n\t\t\t\t\t'newEquation':step.newEquation.ascii()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.isSolved=true;\r\n\t\tif (!solution) {\r\n\t\t\tthis.solve();\r\n\t\t\t// solution = 'Sorry No Solution found';\r\n\t\t\t// this.isSolved=false;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: solution\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(this.croppedImageFile){\r\n\t\t\tthis.isSavable = true;\r\n\r\n\t\t}\r\n\t\tthis.tryDerivative();\r\n\r\n\t}\r\n\ttryDerivative(){\r\n\t\tlet equ=this.equationForm.get('solution').value;\r\n\t\tlet x,y;\r\n\t\tfor(let i of equ){\r\n\r\n\t\t\tif(i=='x'){\r\n\r\n\t\t\t\tx=this.mathSolver.solveDerivative(equ,'x');\r\n\r\n\t\t\t}\r\n\t\t\telse if(i=='y'){\r\n\r\n\t\t\t\ty=this.mathSolver.solveDerivative(equ,'y');\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(x){\r\n\t\t\tlet sol=this.equationForm.get('solution').value\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: `${sol}, Derivation with respect to x : ${x}`\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(y){\r\n\t\t\tlet sol=this.equationForm.get('solution').value\r\n\t\t\tthis.equationForm.patchValue({\r\n\t\t\t\tsolution: `${sol}, Derivation with respect to y : ${y}`\r\n\t\t\t});\r\n\t\t}\r\n\t\t// console.log(x,y);\r\n\t}\r\n\r\n\ttoggleHover(event: boolean) {\r\n\t\tthis.isHovering = event;\r\n\t}\r\n\r\n\timageLoaded() {\r\n\t\t// console.log('Cropper Loaded');\r\n\t}\r\n\r\n\tcropperReady() {\r\n\t\t// console.log('Cropper ready to use');\r\n\t}\r\n\r\n\tloadImageFailed() {\r\n\t\t// console.log('Image Loading failed');\r\n\t}\r\n\r\n\tconvertFiletoBase64(fileInput) {\r\n\t\tvar myReader: FileReader = new FileReader();\r\n\t\tmyReader.onloadend = (e) => {\r\n\t\t\tthis.initialBase64pic = myReader.result;\r\n\t\t};\r\n\t\tmyReader.readAsDataURL(fileInput);\r\n\t}\r\n\r\n\tuploadFileToFirebase():Observable<any>{\r\n\t\treturn new Observable(obs=>{\r\n\t\t\tlet filepath=`${this.userId}/${this.croppedImageFile.name}_${new Date().getTime()}`;\r\n\t\t\tthis.mathSolver.uploadFileToFirebase(filepath,this.croppedImageFile).subscribe(res=>{\r\n\t\t\t\tthis.imageLink=res;\r\n\t\t\t\tobs.next(res);\r\n\t\t\t},\r\n\t\t\terr=>{\r\n\t\t\t\tobs.error(err);\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tsave() {\r\n\t\tthis.mathSolver.getUserId().pipe(first()).subscribe((res) => {\r\n\t\t\tthis.sharedService.startSpinner();\r\n\t\t\tthis.userId = res;\r\n\t\t\tthis.uploadFileToFirebase().subscribe(res=>{\r\n\t\t\t\tlet con: Content = {\r\n\t\t\t\t\tuserId: this.userId,\r\n\t\t\t\t\tcreatedTime: new Date(),\r\n\t\t\t\t\tequation: this.equationForm.get('equation').value,\r\n\t\t\t\t\tsolution: this.equationForm.get('solution').value,\r\n\t\t\t\t\tuid: this.sharedService.generateGUID(),\r\n\t\t\t\t\timageLink:this.imageLink\r\n\t\t\t\t};\r\n\t\t\t\tif (con.userId && con.equation && con.solution) {\r\n\t\t\t\t\tthis.mathSolver.saveContent(con);\r\n\t\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tmessage: 'Saved into account',\r\n\t\t\t\t\t\t\tisAccepted: true\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.sharedService.hideSpinner();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tmessage: 'Please Give a equation and solution',\r\n\t\t\t\t\t\t\tisAccepted: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.sharedService.hideSpinner();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terr=>{\r\n\t\t\t\tthis.sharedService.hideSpinner();\r\n\r\n\t\t\t\tthis.sharedService.openSnackBar({\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tmessage: 'Internal server error',\r\n\t\t\t\t\t\tisAccepted: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tduration: 3,\r\n\t\t\t\t\tpanelClass: [ 'recovery-snackbar' ]\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\r\n\t\t\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UploadComponent } from './components/upload/upload.component';\r\nimport { DrawComponent } from './components/draw/draw.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SolveComponent } from './components/solve/solve.component';\r\n\r\nconst routes:Routes=[\r\n\t{\r\n\t\tpath:'',\r\n\t\tredirectTo:'upload',\r\n\t  },\r\n\t{\r\n\t\tpath:'upload',\r\n\t\tcomponent:UploadComponent,\r\n\t  },\r\n\t  {\r\n\t\tpath:'draw',\r\n\t\tcomponent:DrawComponent,\r\n\t  },\r\n]\r\n\r\n@NgModule({\r\n\tdeclarations: [ UploadComponent, DrawComponent, SolveComponent ],\r\n\timports: [ CommonModule,\r\n\t\t RouterModule.forChild(routes),\r\n\t\t  SharedModule,\r\n\t\t   CoreModule ]\r\n})\r\nexport class MathsolverModule {}\r\n"],"sourceRoot":""}