{"version":3,"sources":["webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/components/account-recovery/account-recovery.component.html","webpack:///./src/app/authentication/components/account-recovery/account-recovery.component.scss","webpack:///./src/app/authentication/components/account-recovery/account-recovery.component.ts","webpack:///./src/app/authentication/components/sign-in/sign-in.component.html","webpack:///./src/app/authentication/components/sign-in/sign-in.component.scss","webpack:///./src/app/authentication/components/sign-in/sign-in.component.ts","webpack:///./src/app/authentication/components/sign-up/sign-up.component.html","webpack:///./src/app/authentication/components/sign-up/sign-up.component.scss","webpack:///./src/app/authentication/components/sign-up/sign-up.component.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AccountRecoveryComponent } from './components/account-recovery/account-recovery.component';\r\n// import { SignOutComponent } from './components/sign-out/sign-out.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\nconst routes:Routes=[\r\n  {\r\n    path:'',\r\n    redirectTo:'sign-in'\r\n  },\r\n  {\r\n    path:'sign-in',\r\n    component:SignInComponent\r\n  },\r\n  {\r\n    path:'sign-up',\r\n    component:SignUpComponent\r\n  },\r\n  {\r\n    path:'account-recovery',\r\n    component:AccountRecoveryComponent\r\n  },\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [SignInComponent, SignUpComponent, AccountRecoveryComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","module.exports = \"<form [formGroup]=\\\"recoveryForm\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxLayoutGap=\\\"12px\\\" class=\\\"py-124\\\">\\r\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"margin-auto\\\">\\r\\n    <div  class=\\\"pb-24 header-1\\\">\\r\\n      Welcome to CrackMyKwery\\r\\n    </div>\\r\\n    <hr><h3 style=\\\"color: dodgerblue;font-weight: bolder; ;font-size: large; display:flex; align-items:center; justify-content: center; \\\">Created with ❤️ by Sudhanshu Dekate</h3><hr>\\r\\n    <div  class=\\\"pb-24 header-2\\\">\\r\\n      Account Recovery\\r\\n    </div>\\r\\n  </div>\\r\\n    <div fxLayout=\\\"column\\\" class=\\\"margin-auto w-300\\\" fxLayoutGap=\\\"12px\\\">\\r\\n        <mat-progress-bar *ngIf=\\\"isLoading\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mode=\\\"indeterminate\\\" color='primary' class=\\\"m-0\\\"></mat-progress-bar>\\r\\n\\r\\n      <mat-card class=\\\"p-36\\\" [class.mat-elevation-z4]=\\\"true\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxFlexAlign=\\\"center\\\" class=\\\" header-4\\\">\\r\\n              Type in your email to change password.\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                <i class=\\\"material-icons-outlined\\\">\\r\\n                  email\\r\\n                </i>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Email</mat-label>\\r\\n                  <input type=\\\"email\\\" matInput placeholder=\\\"Type in Email\\\" formControlName=\\\"email\\\">\\r\\n                  <mat-error *ngIf=\\\"recoveryForm.get('email').touched && recoveryForm.get('email').invalid\\\">{{emailError()}}</mat-error>\\r\\n                  <!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n            <button type=\\\"submit\\\" (click)='onSubmit()' mat-raised-button color=\\\"primary\\\" class=\\\"w-240 h-40\\\">Reset my\\r\\n              password</button>\\r\\n            <!-- <button (click)='routeToSignup()' mat-stroked-button color=\\\"primary\\\" class=\\\"w-240 h-40\\\">Create New Account</button> -->\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n      <div fxFlex='15' fxLayout=\\\"row\\\" fxFlexAlign=\\\"start center\\\">\\r\\n          <div>\\r\\n            <a (click)='routeToSignin()' class=\\\"cursor-pointer secondary-text-color\\\"> &lt; Back to Login</a>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvYWNjb3VudC1yZWNvdmVyeS9hY2NvdW50LXJlY292ZXJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { UserInformation } from '../../../config/interfaces/user.interface';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { urlPaths, recoverAccountCode, defaultConst } from '../../../config/constants/defaultConstants';\r\nimport { SharedService } from '../../../shared/services/shared.service';\r\nimport { UtilityService } from '../../../core/utility-service/utility.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n\tselector: 'app-account-recovery',\r\n\ttemplateUrl: './account-recovery.component.html',\r\n\tstyleUrls: [ './account-recovery.component.scss' ]\r\n})\r\nexport class AccountRecoveryComponent implements OnInit {\r\n\tuser: UserInformation;\r\n\trecoveryForm: FormGroup;\r\n\tisLoading: boolean = false;\r\n\tconstructor(\r\n\t\tprivate authenticationservice: AuthenticationService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate router: Router,\r\n\t\tprivate sharedService: SharedService,\r\n\t\tprivate util: UtilityService\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.makeRecoveryForm();\r\n\t}\r\n\r\n\tmakeRecoveryForm() {\r\n\t\tthis.recoveryForm = this.fb.group({\r\n\t\t\temail: [ '' ]\r\n\t\t});\r\n\t}\r\n\r\n\tsendPasswordResetEmail(user: UserInformation) {\r\n\t\tthis.authenticationservice.sendPasswordResetEmail(user).pipe(first()).subscribe((res) => {\r\n\t\t\t// console.log(res);\r\n\t\t\tif (res && res.code) {\r\n\t\t\t\tthis.validateForm(res.code);\r\n\t\t\t} else {\r\n\t\t\t\tthis.openSnackBar();\r\n\t\t\t}\r\n\t\t\tthis.isLoading = false;\r\n\t\t});\r\n\t}\r\n\r\n\tvalidateForm(errorCode) {\r\n\t\tthis.updateform();\r\n\t\tlet errobj = {};\r\n\t\terrobj[errorCode] = true;\r\n\t\tthis.recoveryForm.controls.email.setErrors(errobj);\r\n\t}\r\n\t\r\n\tupdateform() {\r\n\t\tlet controlsvalues = this.util.getFormControlsValueFromFormGroup(this.recoveryForm);\r\n\t\t_.forEach(controlsvalues, (value) => {\r\n\t\t\tthis.recoveryForm.get(value).markAsTouched();\r\n\t\t});\r\n\t}\r\n\r\n\topenSnackBar() {\r\n\t\tthis.sharedService.openSnackBar({\r\n\t\t\tdata: { message: defaultConst.emailsent, isAccepted: true },\r\n\t\t\tduration: 2,\r\n\t\t\tpanelClass: [ 'recovery-snackbar' ],\r\n\t\t\thorizontalPosition: 'right',\r\n\t\t\tverticalPosition: 'top'\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tif (this.recoveryForm.valid) {\r\n\t\t\tthis.isLoading = true;\r\n\t\t\tthis.user = {\r\n\t\t\t\temail: this.recoveryForm.value.email,\r\n\t\t\t\tpassword: ''\r\n\t\t\t};\r\n\t\t\tthis.sendPasswordResetEmail(this.user);\r\n\t\t}\r\n\t}\r\n\trouteToSignin() {\r\n\t\tthis.router.navigate([ urlPaths.Authentication.Signin.url ]);\r\n\t}\r\n}\r\n","module.exports = \"\\r\\n<form [formGroup]=\\\"signinform\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-124 pb-48 header-1 \\\">\\r\\n    Welcome to CrackMyKwery\\r\\n  </div>\\r\\n  <hr><h3 style=\\\"color: dodgerblue;font-weight: bolder; ;font-size: large; display:flex; align-items:center; justify-content: center; \\\">Created with ❤️ by Sudhanshu Dekate</h3><hr>\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxLayoutGap=\\\"12px\\\" class=\\\"margin-auto w-312 pb-124\\\">\\r\\n      <mat-progress-bar *ngIf=\\\"isLoading\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mode=\\\"indeterminate\\\" color='primary' class=\\\"m-0\\\"></mat-progress-bar>\\r\\n\\r\\n    <mat-card class=\\\"p-36\\\" [class.mat-elevation-z4]=\\\"true\\\">\\r\\n        \\r\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"32px\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n              <i class=\\\"material-icons-outlined\\\">\\r\\n                email\\r\\n              </i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Email</mat-label>\\r\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Type in Email\\\" formControlName=\\\"email\\\">\\r\\n                <mat-error *ngIf=\\\"signinform.get('email').touched && signinform.get('email').invalid\\\">{{emailError()}}</mat-error>\\r\\n                \\r\\n                <!-- <mat-error *ngIf=\\\"signinform.get('email').touched && signinform.get('email').invalid\\\">{{signinform.get('email').errors|json}}</mat-error> -->\\r\\n\\r\\n                <!-- <mat-error *ngIf=\\\"true\\\">222</mat-error> -->\\r\\n                <!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n              <i class=\\\"material-icons-outlined\\\">\\r\\n                lock\\r\\n              </i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Type in passoword \\\" formControlName=\\\"password\\\">\\r\\n                <mat-error *ngIf=\\\"signinform.get('password').touched && signinform.get('password').invalid\\\">{{passwordError()}}</mat-error>\\r\\n\\r\\n                <!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n          <button type=\\\"submit\\\" (click)='onSubmit()' mat-raised-button color=\\\"primary\\\" class=\\\"w-240 h-40\\\">Login</button>\\r\\n          <button (click)='routeToSignup()' mat-stroked-button color=\\\"primary\\\" class=\\\"w-240 h-40\\\">Create New\\r\\n            Account</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n    <div fxFlex='15' fxLayout=\\\"row\\\" fxFlexAlign=\\\"start center\\\" fxLayoutGap=\\\"110px\\\">\\r\\n      <div>\\r\\n        <a (click)='routeToAccountRecovery()' class=\\\"cursor-pointer secondary-text-color\\\">Forgot Password? </a>\\r\\n      </div>\\r\\n      <div>\\r\\n        <a (click)='routeToHome()' class=\\\"cursor-pointer secondary-text-color\\\">Back to Home</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIn0= */\"","import { SharedService } from './../../../shared/services/shared.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport { UserInformation } from '../../../config/interfaces/user.interface';\r\nimport { first } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { urlPaths, signinErrorCode } from '../../../config/constants/defaultConstants';\r\nimport { UtilityService } from '../../../core/utility-service/utility.service';\r\nimport * as _ from 'lodash';\r\nimport { NavbarComponent } from '../../../root/navbar/navbar.component';\r\nimport { RootService } from '../../../root/services/root.service';\r\n\r\n@Component({\r\n\tselector: 'app-sign-in',\r\n\ttemplateUrl: './sign-in.component.html',\r\n\tstyleUrls: [ './sign-in.component.scss' ]\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\tconstructor(\r\n\t\tprivate authenticationservice: AuthenticationService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate router: Router,\r\n\t\tprivate util: UtilityService,\r\n\t\tprivate root:RootService,\r\n\t\tprivate sharedService:SharedService\r\n\t) {}\r\n\r\n\tsigninform: FormGroup;\r\n\tuserInformation: UserInformation;\r\n\tisLoading: boolean = false;\r\n\tngOnInit() {\r\n\t\tthis.makeSignInForm();\r\n\t}\r\n\r\n\tmakeSignInForm() {\r\n\t\tthis.signinform = this.fb.group({\r\n\t\t\temail: [ '', [ Validators.required, Validators.email ] ],\r\n\t\t\tpassword: [ '', Validators.required ]\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tif(this.signinform.valid){\r\n\t\t\tthis.isLoading = true;\r\n\t\t\tthis.userInformation = {\r\n\t\t\t\temail: this.signinform.value.email,\r\n\t\t\t\tpassword: this.signinform.value.password\r\n\t\t\t};\r\n\t\t\t// setTimeout(()=>{\r\n\t\t\t// \tthis.signinUser(this.userInformation);\r\n\t\t\t// }, 4000);\r\n\t\t\tthis.signinUser(this.userInformation);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tsigninUser(user: UserInformation) {\r\n\t\tthis.authenticationservice.signin(user).pipe(first()).subscribe((res) => {\r\n\t\t\tif (res && res.code) {\r\n\t\t\t\t// console.log(res.code);\r\n\t\t\t\tthis.validateSignIn(res.code);\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.router.navigate([ urlPaths.MathSolver.upload.url ]);\r\n\t\t\t\tthis.isLoading = false;\r\n\r\n\t\t\t\t// console.log(this.authenticationservice.getCurrentUser().email);\r\n\t\t\t\t// location.reload();\r\n\r\n\t\t\t}\r\n\t\t},err=>{\r\n\t\t\tthis.openErrorBar('Try Again');\r\n\t\t});\r\n\t}\r\n\r\n\trouteToSignup() {\r\n\t\tthis.router.navigate([ urlPaths.Authentication.Signup.url ]);\r\n\t}\r\n\trouteToAccountRecovery() {\r\n\t\tthis.router.navigate([ urlPaths.Authentication.AccountRecovery.url ]);\r\n\t}\r\n\trouteToHome(){\r\n\t\tthis.router.navigate([ urlPaths.MathSolver.upload.url ]);\r\n\t}\r\n\r\n\tvalidateSignIn(errorCode) {\r\n\t\tthis.updateform();\r\n\t\t\r\n\t\tlet errobj={};\r\n\t\terrobj[errorCode]=true;\r\n\t\tif(errorCode==signinErrorCode[\"Wrong password\"].code){\r\n\t\t\tthis.signinform.controls.password.setErrors(errobj);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.signinform.controls.email.setErrors(errobj);\r\n\t\t}\r\n\t\tthis.openErrorBar(String(errorCode));\r\n\t}\r\n\r\n\tupdateform() {\r\n\t\tlet controlsvalues = this.util.getFormControlsValueFromFormGroup(this.signinform);\r\n\t\t_.forEach(controlsvalues, (value) => {\r\n\t\t\tthis.signinform.get(value).markAsTouched();\r\n\t\t});\r\n\t}\r\n\topenErrorBar(errorMessage) {\r\n\t\tthis.sharedService.openSnackBar({\r\n\t\t\tdata: { message: errorMessage, isAccepted: false },\r\n\t\t\tduration: 2,\r\n\t\t\tpanelClass: [ 'default-snackbar' ],\r\n\t\t\thorizontalPosition: 'right',\r\n\t\t\tverticalPosition: 'top'\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n}\r\n","module.exports = \"<div class='ml-25-p mr-25-p pt-124 pb-64'>\\r\\n\\r\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n    <div class='header-1'>Welcome to CrackMyKwery</div>\\r\\n    <div class='header-2'>Create a new Account in CrackMyKwery</div>\\r\\n  </div>\\r\\n\\r\\n  <form [formGroup]=\\\"signupform\\\" class=\\\"mt-36\\\">\\r\\n    <mat-progress-bar *ngIf=\\\"isLoading\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" mode=\\\"indeterminate\\\"\\r\\n      color='primary' class=\\\"m-0 \\\"></mat-progress-bar>\\r\\n\\r\\n    <div>\\r\\n\\r\\n      <mat-card class=\\\"p-64 mb-36\\\" [class.mat-elevation-z10]=\\\"true\\\">\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxLayoutGap=\\\"16px\\\">\\r\\n          <div class='header-3'>Account Information</div>\\r\\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\r\\n        </div>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayout.lt-lg=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutAlign.lt-lg=\\\"center start\\\"\\r\\n          class=\\\"my-40\\\" fxLayoutGap=\\\"12px\\\">\\r\\n          <div fxLayout=\\\"column\\\" fxFlex='50' fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                  <i class=\\\"material-icons-outlined \\\">\\r\\n                    email\\r\\n\\r\\n                  </i>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input type=\\\"email\\\" matInput placeholder=\\\"Type in Email\\\" formControlName=\\\"email\\\">\\r\\n                    <mat-error *ngIf=\\\"signupform.get('email').touched && signupform.get('email').invalid\\\">\\r\\n                      {{errormessages.invalid_email}}</mat-error>\\r\\n\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                  <i class=\\\"material-icons-outlined \\\">\\r\\n                    perm_identity\\r\\n                  </i>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Display Name</mat-label>\\r\\n                    <input type=\\\"text\\\" matInput placeholder=\\\"Type in name \\\" formControlName=\\\"name\\\">\\r\\n                    <mat-error *ngIf=\\\"signupform.get('name').touched && signupform.get('name').invalid\\\">\\r\\n                      {{errormessages.name}}</mat-error>\\r\\n\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"column\\\" fxFlex='50' fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n            <div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                  <i class=\\\"material-icons-outlined \\\">\\r\\n                    lock\\r\\n                  </i>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Password</mat-label>\\r\\n                    <input type=\\\"password\\\" matInput placeholder=\\\"Type in passoword \\\" formControlName=\\\"password\\\"\\r\\n                      [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"signupform.get('password').touched && signupform.get('password').invalid  && !signupform.hasError('notMatching')\\\">\\r\\n                      {{errormessages.weak_password}}</mat-error>\\r\\n                    <mat-error *ngIf=\\\"signupform.get('password').touched && signupform.hasError('notMatching') \\\">\\r\\n                      {{errormessages.password_mismatch}}</mat-error>\\r\\n\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                  <i class=\\\"material-icons-outlined \\\">\\r\\n                    vpn_key\\r\\n                  </i>\\r\\n                </div>\\r\\n                <div>\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Confirm Password</mat-label>\\r\\n                    <input type=\\\"password\\\" matInput placeholder=\\\"Type in passoword again \\\"\\r\\n                      formControlName=\\\"confirmpassword\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"signupform.get('confirmpassword').touched && signupform.get('confirmpassword').invalid && !signupform.hasError('notMatching')\\\">\\r\\n                      {{errormessages.weak_password}}</mat-error>\\r\\n                    <mat-error *ngIf=\\\"signupform.get('confirmpassword').touched && signupform.hasError('notMatching') \\\">\\r\\n                      {{errormessages.password_mismatch}}</mat-error>\\r\\n\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" fxLayoutGap=\\\"16px\\\">\\r\\n          <div class='header-3'>Personal Information</div>\\r\\n          <mat-divider [inset]=\\\"true\\\"></mat-divider>\\r\\n        </div> -->\\r\\n\\r\\n        <!-- <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\" space-around center \\\" fxLayoutGap=\\\"12px\\\" class=\\\"my-40\\\">\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-lg=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutAlign.lt-lg=\\\"center start\\\"\\r\\n            fxLayoutGap=\\\"12px\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxFlex='50' fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                <i class=\\\"material-icons-outlined \\\">\\r\\n                  phone\\r\\n                </i>\\r\\n              </div>\\r\\n              <div class=\\\"mat-form-field-wrapper \\\">\\r\\n                <international-phone-number formControlName=\\\"phoneNumber\\\" placeholder=\\\"Enter phone number\\\"\\r\\n                  [defaultCountry]=defaultCountryOfPhoneNumber>\\r\\n                </international-phone-number>\\r\\n                <mat-error *ngIf=\\\"signupform.get('phoneNumber').touched && signupform.get('phoneNumber').invalid\\\">{{errormessages.phonenumber_invalid}}</mat-error>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxFlex='50' fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                <i class=\\\"material-icons-outlined \\\">\\r\\n                  security\\r\\n                </i>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>User Type</mat-label>\\r\\n                  <mat-select formControlName='role' multiple disableOptionCentering>\\r\\n                    <mat-option *ngFor='let role of roles | keyvalue' [value]='role.key'>{{role.value}}</mat-option>\\r\\n                  </mat-select>\\r\\n                  <mat-error *ngIf=\\\"signupform.get('role').touched && signupform.get('role').invalid\\\">\\r\\n                    {{errormessages.roles_required}}</mat-error>\\r\\n\\r\\n                </mat-form-field>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-lg=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutAlign.lt-lg=\\\"center start\\\"\\r\\n            fxLayoutGap=\\\"12px\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxFlex='50' fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                <i class=\\\"material-icons-outlined \\\">\\r\\n                  home\\r\\n                </i>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Home Address</mat-label>\\r\\n                  <input type=\\\"text\\\" matInput placeholder=\\\"Type in home address \\\" formControlName=\\\"homeAddress\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxFlex='50' fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\r\\n              <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" class=\\\"mat-icon-for-input\\\">\\r\\n                <i class=\\\"material-icons-outlined \\\">\\r\\n                  store\\r\\n                </i>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Shop Address</mat-label>\\r\\n                  <input type=\\\"text\\\" matInput placeholder=\\\"Type in Shop Address \\\" formControlName=\\\"shopAddress\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div> -->\\r\\n\\r\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center end\\\" fxLayoutAlign.lt-lg=\\\"center center\\\" fxLayoutGap=\\\"16px\\\">\\r\\n          <div>\\r\\n            <button type=\\\"submit\\\" (click)='onSubmit()' mat-raised-button color=\\\"primary\\\" class=\\\"w-240 h-40\\\">Create\\r\\n              Account</button>\\r\\n          </div>\\r\\n          <div>\\r\\n            <a (click)='routeToSignin()' class=\\\"cursor-pointer secondary-text-color\\\">Already have an Account?</a>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n  <hr><h3 style=\\\"color: dodgerblue;font-weight: bolder; ;font-size: large; display:flex; align-items:center; justify-content: center; \\\">Created with ❤️ by Sudhanshu Dekate</h3><hr>\\r\\n</div>\"","module.exports = \"::ng-deep .mat-select-panel {\\n  margin-left: 30px !important;\\n  margin-top: 16px !important; }\\n\\n:host ::ng-deep international-phone-number .input-group {\\n  border: 1px solid #ced4da;\\n  border-radius: 6px;\\n  height: 100%;\\n  max-width: 200px;\\n  min-width: 200px; }\\n\\n:host ::ng-deep international-phone-number .input-group .input-group-addon .dropdown {\\n  height: 100%; }\\n\\n:host ::ng-deep international-phone-number .input-group .input-group-addon .dropdown .dropbtn {\\n  padding-top: 12px;\\n  padding-bottom: 12px;\\n  padding-left: 12px;\\n  padding-right: 0px;\\n  height: 100%; }\\n\\n:host ::ng-deep international-phone-number .input-group .input-group-addon .dropdown .dropbtn .arrow-down {\\n  margin: 8px; }\\n\\n:host ::ng-deep international-phone-number .form-control {\\n  border: none;\\n  padding-left: 8px;\\n  font-size: 14px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9zaWduLXVwL0M6XFxVc2Vyc1xcU3VkaGFuc2h1XFwudnNjb2RlXFxQUk9KRUNUU1xcTUxcXGFuZ3VsYXItZmxhc2tcXGFuZ3VsYXIvc3JjXFxhcHBcXGF1dGhlbnRpY2F0aW9uXFxjb21wb25lbnRzXFxzaWduLXVwXFxzaWduLXVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQTJCO0VBQzNCLDJCQUEwQixFQUFBOztBQUk5QjtFQUdZLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGdCQUFpQjtFQUVqQixnQkFBaUIsRUFBQTs7QUFSN0I7RUFXWSxZQUFZLEVBQUE7O0FBWHhCO0VBY1ksaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFlBQVksRUFBQTs7QUFsQnhCO0VBcUJZLFdBQVcsRUFBQTs7QUFyQnZCO0VBd0JRLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZUFBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLm1hdC1zZWxlY3QtcGFuZWx7XHJcbiAgICBtYXJnaW4tbGVmdDozMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tdG9wOjE2cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbjpob3N0e1xyXG4gICAgOjpuZy1kZWVwIGludGVybmF0aW9uYWwtcGhvbmUtbnVtYmVyIHtcclxuICAgICAgICAuaW5wdXQtZ3JvdXAge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAyMDBweCA7XHJcbiAgICAgICAgICAgIC8vIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwMHB4IDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmlucHV0LWdyb3VwIC5pbnB1dC1ncm91cC1hZGRvbiAuZHJvcGRvd24ge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5pbnB1dC1ncm91cCAuaW5wdXQtZ3JvdXAtYWRkb24gLmRyb3Bkb3duIC5kcm9wYnRuIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDEycHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEycHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuaW5wdXQtZ3JvdXAgLmlucHV0LWdyb3VwLWFkZG9uIC5kcm9wZG93biAuZHJvcGJ0biAuYXJyb3ctZG93biB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogOHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZm9ybS1jb250cm9sIHtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgICAgICAgZm9udC1zaXplOjE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { UserInformation, CustomerUserInformation } from '../../../config/interfaces/user.interface';\r\nimport { first, takeUntil } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { defaultConst, urlPaths, passwordRegex, signupErrorCodes, error_messages } from '../../../config/constants/defaultConstants';\r\nimport { SharedService } from '../../../shared/services/shared.service';\r\nimport * as _ from 'lodash';\r\nimport { Subject } from 'rxjs';\r\nimport { ErrorStateMatcherForsignUppage } from '../../../core/utility-service/utility.service';\r\n\r\n@Component({\r\n\tselector: 'app-sign-up',\r\n\ttemplateUrl: './sign-up.component.html',\r\n\tstyleUrls: [ './sign-up.component.scss' ]\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy {\r\n\tsignupform: FormGroup;\r\n\tuserInformation: UserInformation;\r\n\terrormessages = error_messages;\r\n\t_unsubscribeAll: Subject<any>;\r\n\tverificationEmailsent = defaultConst.checkEmail;\r\n\tmatcher;\r\n\tisLoading: boolean = false;\r\n\tconstructor(\r\n\t\tprivate authenticationService: AuthenticationService,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate router: Router,\r\n\t\tprivate sharedService: SharedService\r\n\t) {\r\n\t\tthis._unsubscribeAll = new Subject();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.makeSignUpForm();\r\n\t\tthis.setCustomValidation();\r\n\t}\r\n\r\n\tmakeSignUpForm() {\r\n\t\tthis.signupform = this.fb.group({\r\n\t\t\tname: [ '', Validators.required ],\r\n\t\t\temail: [ '', [ Validators.required, Validators.email ] ],\r\n\t\t\tpassword: [ '', [ Validators.required, Validators.pattern(passwordRegex) ] ],\r\n\t\t\tconfirmpassword: [ '', [ Validators.required, Validators.pattern(passwordRegex) ] ],\r\n\t\t});\r\n\t}\r\n\r\n\tpasswordMatchValidator(group: FormGroup): any {\r\n\t\tif (group) {\r\n\t\t\tif (group.get('password').value !== group.get('confirmpassword').value) {\r\n\t\t\t\treturn { notMatching: true };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsetCustomValidation() {\r\n\t\tthis.signupform.setValidators(this.passwordMatchValidator);\r\n\t\tthis.signupform.updateValueAndValidity();\r\n\t\tthis.matcher = new ErrorStateMatcherForsignUppage();\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tif(this.signupform.valid){\r\n\t\t\tthis.isLoading = true;\r\n\t\t\tthis.userInformation = {\r\n\t\t\t\temail: this.signupform.value.email,\r\n\t\t\t\tpassword: this.signupform.value.password,\r\n\t\t\t\tdisplayName: this.signupform.value.name,\r\n\t\t\t\tmetaData: {\r\n\t\t\t\t\tname: this.signupform.value.name,\r\n\t\t\t\t\temail: this.signupform.value.email,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.registerUser(this.userInformation);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.authenticationService.touchAllfields(this.signupform);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tregisterUser(user: UserInformation) {\r\n\t\tthis.authenticationService.signUp(user).pipe(first()).subscribe((res) => {\r\n\t\t\tif (res && res.code) {\r\n\t\t\t\t_.forEach(signupErrorCodes, (value, key) => {\r\n\t\t\t\t\tif (res.code == value.code) {\r\n\t\t\t\t\t\tthis.openErrorBar(value.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.openVerificationBar();\r\n\t\t\t\tthis.routeToHome();\r\n\t\t\t}\r\n\t\t\tthis.isLoading = false;\r\n\t\t});\r\n\t}\r\n\r\n\topenVerificationBar() {\r\n\t\tthis.sharedService.openSnackBar({\r\n\t\t\tdata: { message: this.verificationEmailsent, isAccepted: true },\r\n\t\t\tduration: 6,\r\n\t\t\tpanelClass: [ 'default-snackbar' ],\r\n\t\t\thorizontalPosition: 'right',\r\n\t\t\tverticalPosition: 'top'\r\n\t\t});\r\n\t}\r\n\r\n\topenErrorBar(errorMessage) {\r\n\t\tthis.sharedService.openSnackBar({\r\n\t\t\tdata: { message: errorMessage, isAccepted: false },\r\n\t\t\tduration: 2,\r\n\t\t\tpanelClass: [ 'default-snackbar' ],\r\n\t\t\thorizontalPosition: 'right',\r\n\t\t\tverticalPosition: 'top'\r\n\t\t});\r\n\t}\r\n\r\n\trouteToSignin() {\r\n\t\tthis.router.navigate([ urlPaths.Authentication.Signin.url ]);\r\n\t}\r\n\r\n\trouteToHome() {\r\n\t\tthis.router.navigate([ urlPaths.Authentication.Signin.url ]);\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis._unsubscribeAll.next();\r\n\t\tthis._unsubscribeAll.complete();\r\n\t\tthis._unsubscribeAll.unsubscribe();\r\n\t}\r\n}\r\n"],"sourceRoot":""}